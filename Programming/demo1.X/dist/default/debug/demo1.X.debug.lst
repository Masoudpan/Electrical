

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Nov 05 21:39:45 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  0088                     	;# 
    65  0089                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  008F                     	;# 
    70  0090                     	;# 
    71  0091                     	;# 
    72  0092                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  0105                     	;# 
    87  0107                     	;# 
    88  0108                     	;# 
    89  0109                     	;# 
    90  010C                     	;# 
    91  010C                     	;# 
    92  010D                     	;# 
    93  010D                     	;# 
    94  010E                     	;# 
    95  010F                     	;# 
    96  0110                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011A                     	;# 
   107  011B                     	;# 
   108  011C                     	;# 
   109  011D                     	;# 
   110  011E                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0095                     	;# 
   165  0096                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  0105                     	;# 
   175  0107                     	;# 
   176  0108                     	;# 
   177  0109                     	;# 
   178  010C                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  0110                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  011A                     	;# 
   195  011B                     	;# 
   196  011C                     	;# 
   197  011D                     	;# 
   198  011E                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0095                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  0105                     	;# 
   263  0107                     	;# 
   264  0108                     	;# 
   265  0109                     	;# 
   266  010C                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  010F                     	;# 
   272  0110                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0113                     	;# 
   276  0114                     	;# 
   277  0115                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0118                     	;# 
   281  0119                     	;# 
   282  011A                     	;# 
   283  011B                     	;# 
   284  011C                     	;# 
   285  011D                     	;# 
   286  011E                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0110                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011A                     	;# 
   371  011B                     	;# 
   372  011C                     	;# 
   373  011D                     	;# 
   374  011E                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0110                     	;# 
   449  0111                     	;# 
   450  0112                     	;# 
   451  0113                     	;# 
   452  0114                     	;# 
   453  0115                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  0118                     	;# 
   457  0119                     	;# 
   458  011A                     	;# 
   459  011B                     	;# 
   460  011C                     	;# 
   461  011D                     	;# 
   462  011E                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465  0000                     	;# 
   466  0001                     	;# 
   467  0002                     	;# 
   468  0003                     	;# 
   469  0004                     	;# 
   470  0005                     	;# 
   471  0006                     	;# 
   472  0007                     	;# 
   473  0008                     	;# 
   474  0009                     	;# 
   475  000A                     	;# 
   476  000B                     	;# 
   477  000C                     	;# 
   478  000D                     	;# 
   479  000E                     	;# 
   480  000E                     	;# 
   481  000F                     	;# 
   482  0010                     	;# 
   483  0011                     	;# 
   484  0012                     	;# 
   485  0013                     	;# 
   486  0014                     	;# 
   487  0015                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0017                     	;# 
   491  0018                     	;# 
   492  0019                     	;# 
   493  001A                     	;# 
   494  001B                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  001D                     	;# 
   498  001E                     	;# 
   499  001F                     	;# 
   500  0081                     	;# 
   501  0085                     	;# 
   502  0086                     	;# 
   503  0087                     	;# 
   504  0088                     	;# 
   505  0089                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  008F                     	;# 
   510  0090                     	;# 
   511  0091                     	;# 
   512  0092                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0110                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011A                     	;# 
   547  011B                     	;# 
   548  011C                     	;# 
   549  011D                     	;# 
   550  011E                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  000E                     	;# 
   569  000F                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  0081                     	;# 
   589  0085                     	;# 
   590  0086                     	;# 
   591  0087                     	;# 
   592  0088                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  009F                     	;# 
   614  0105                     	;# 
   615  0107                     	;# 
   616  0108                     	;# 
   617  0109                     	;# 
   618  010C                     	;# 
   619  010C                     	;# 
   620  010D                     	;# 
   621  010D                     	;# 
   622  010E                     	;# 
   623  010F                     	;# 
   624  0110                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0113                     	;# 
   628  0114                     	;# 
   629  0115                     	;# 
   630  0116                     	;# 
   631  0117                     	;# 
   632  0118                     	;# 
   633  0119                     	;# 
   634  011A                     	;# 
   635  011B                     	;# 
   636  011C                     	;# 
   637  011D                     	;# 
   638  011E                     	;# 
   639  018C                     	;# 
   640  018D                     	;# 
   641                           
   642                           	psect	idataBANK0
   643  06EB                     __pidataBANK0:	
   644                           
   645                           ;initializer for uart_write_hall_state@F2945
   646  06EB  3443               	retlw	67
   647  06EC  3475               	retlw	117
   648  06ED  3472               	retlw	114
   649  06EE  3472               	retlw	114
   650  06EF  3465               	retlw	101
   651  06F0  346E               	retlw	110
   652  06F1  3474               	retlw	116
   653  06F2  3420               	retlw	32
   654  06F3  3448               	retlw	72
   655  06F4  3461               	retlw	97
   656  06F5  346C               	retlw	108
   657  06F6  346C               	retlw	108
   658  06F7  3420               	retlw	32
   659  06F8  3453               	retlw	83
   660  06F9  3474               	retlw	116
   661  06FA  3461               	retlw	97
   662  06FB  3474               	retlw	116
   663  06FC  3465               	retlw	101
   664  06FD  343A               	retlw	58
   665  06FE  3420               	retlw	32
   666  06FF  3400               	retlw	0
   667                           
   668                           ;initializer for uart_write_direction@F2949
   669  0700  3443               	retlw	67
   670  0701  3475               	retlw	117
   671  0702  3472               	retlw	114
   672  0703  3472               	retlw	114
   673  0704  3465               	retlw	101
   674  0705  346E               	retlw	110
   675  0706  3474               	retlw	116
   676  0707  3420               	retlw	32
   677  0708  3444               	retlw	68
   678  0709  3469               	retlw	105
   679  070A  3472               	retlw	114
   680  070B  3465               	retlw	101
   681  070C  3463               	retlw	99
   682  070D  3474               	retlw	116
   683  070E  3469               	retlw	105
   684  070F  346F               	retlw	111
   685  0710  346E               	retlw	110
   686  0711  343A               	retlw	58
   687  0712  3420               	retlw	32
   688  0713  3400               	retlw	0
   689                           
   690                           	psect	nvBANK0
   691  0054                     __pnvBANK0:	
   692  0054                     _init_state:	
   693  0054                     	ds	2
   694  001F                     _ADCON0bits	set	31
   695  001E                     _ADRESH	set	30
   696  0007                     _PORTCbits	set	7
   697  0008                     _PORTDbits	set	8
   698  0009                     _PORTEbits	set	9
   699  001A                     _RCREG	set	26
   700  0018                     _RCSTAbits	set	24
   701  0019                     _TXREG	set	25
   702  0065                     _RCIF	set	101
   703  009F                     _ADCON1	set	159
   704  009E                     _ADRESL	set	158
   705  0091                     _ANSEL	set	145
   706  0099                     _SPBRG	set	153
   707  0085                     _TRISA	set	133
   708  0086                     _TRISB	set	134
   709  0087                     _TRISC	set	135
   710  0088                     _TRISD	set	136
   711  0089                     _TRISE	set	137
   712  0098                     _TXSTA	set	152
   713  04C1                     _TRMT	set	1217
   714                           
   715                           ; #config settings
   716  0000                     
   717                           	psect	cinit
   718  07F0                     start_initialization:	
   719  07F0                     __initialization:	
   720                           
   721                           ; Initialize objects allocated to BANK0
   722  07F0  1383               	bcf	3,7	;select IRP bank0
   723  07F1  3049               	movlw	low (__pdataBANK0+41)
   724  07F2  00FD               	movwf	btemp+-1
   725  07F3  3006               	movlw	high __pidataBANK0
   726  07F4  00FE               	movwf	btemp
   727  07F5  30EB               	movlw	low __pidataBANK0
   728  07F6  00FF               	movwf	btemp+1
   729  07F7  3020               	movlw	low __pdataBANK0
   730  07F8  0084               	movwf	4
   731  07F9  120A  118A  2646   	fcall	init_ram0
   732  07FC                     end_of_initialization:	
   733                           ;End of C runtime variable initialization code
   734                           
   735  07FC                     __end_of__initialization:	
   736  07FC  0183               	clrf	3
   737  07FD  120A  118A  2EA3   	ljmp	_main	;jump to C main() function
   738                           
   739                           	psect	dataBANK0
   740  0020                     __pdataBANK0:	
   741  0020                     uart_write_hall_state@F2945:	
   742  0020                     	ds	21
   743  0035                     uart_write_direction@F2949:	
   744  0035                     	ds	20
   745                           
   746                           	psect	inittext
   747  0642                     init_fetch0:	
   748                           ;	Called with low address in FSR and high address in W
   749                           
   750  0642  087E               	movf	126,w
   751  0643  008A               	movwf	10
   752  0644  087F               	movf	127,w
   753  0645  0082               	movwf	2
   754  0646                     init_ram0:	
   755                           ;Called with:
   756                           ;	high address of idata address in btemp 
   757                           ;	low address of idata address in btemp+1 
   758                           ;	low address of data in FSR
   759                           ;	high address + 1 of data in btemp-1
   760                           
   761  0646  2642  120A  118A   	fcall	init_fetch0
   762  0649  0080               	movwf	0
   763  064A  0A84               	incf	4,f
   764  064B  0804               	movf	4,w
   765  064C  067D               	xorwf	125,w
   766  064D  1903               	btfsc	3,2
   767  064E  3400               	retlw	0
   768  064F  0AFF               	incf	127,f
   769  0650  1903               	btfsc	3,2
   770  0651  0AFE               	incf	126,f
   771  0652  2E46               	goto	init_ram0
   772                           
   773                           	psect	cstackCOMMON
   774  0071                     __pcstackCOMMON:	
   775  0071                     ?_setup_mcu:	
   776  0071                     ?_setup_port:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0071                     ??_setup_port:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0071                     ?_init_pin:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0071                     ??_init_pin:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0071                     ?_init_hall:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0071                     ?_init_uart:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0071                     ??_init_uart:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0071                     ?_main:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0071                     ?_read_hall:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0071                     ?_analog_init:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0071                     ?_uart_write_char:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0071                     ??_uart_write_char:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0071                     ?_uart_write_unsigned_int:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0071                     read_hall@hall_B:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0071                     uart_write_char@data:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0071                     analog_init@analog_port:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0071                     uart_write_unsigned_int@number:	
   825                           ; 2 bytes @ 0x0
   826                           
   827                           
   828                           ; 2 bytes @ 0x0
   829  0071                     	ds	1
   830  0072                     read_hall@hall_C:	
   831                           
   832                           ; 1 bytes @ 0x1
   833  0072                     	ds	1
   834  0073                     ??_read_hall:	
   835  0073                     ??_analog_init:	
   836                           ; 1 bytes @ 0x2
   837                           
   838  0073                     ??_uart_write_unsigned_int:	
   839                           ; 1 bytes @ 0x2
   840                           
   841                           
   842                           ; 1 bytes @ 0x2
   843  0073                     	ds	2
   844  0075                     ?_get_analog:	
   845  0075                     uart_write_unsigned_int@char1:	
   846                           ; 2 bytes @ 0x4
   847                           
   848  0075                     get_analog@port:	
   849                           ; 1 bytes @ 0x4
   850                           
   851                           
   852                           ; 2 bytes @ 0x4
   853  0075                     	ds	1
   854  0076                     read_hall@hall_A:	
   855  0076                     uart_write_unsigned_int@char2:	
   856                           ; 1 bytes @ 0x5
   857                           
   858                           
   859                           ; 1 bytes @ 0x5
   860  0076                     	ds	1
   861  0077                     ??_get_analog:	
   862  0077                     ?_get_hall_state:	
   863                           ; 1 bytes @ 0x6
   864                           
   865                           
   866                           ; 2 bytes @ 0x6
   867  0077                     	ds	2
   868  0079                     ??_get_hall_state:	
   869                           
   870                           ; 1 bytes @ 0x8
   871  0079                     	ds	2
   872  007B                     ??_setup_mcu:	
   873  007B                     ??_init_hall:	
   874                           ; 1 bytes @ 0xA
   875                           
   876                           
   877                           ; 1 bytes @ 0xA
   878  007B                     	ds	2
   879  007D                     ??_uart_write_voltage:	
   880                           
   881                           	psect	cstackBANK0
   882  0049                     __pcstackBANK0:	
   883                           ; 1 bytes @ 0xC
   884                           
   885  0049                     get_hall_state@state:	
   886  0049                     get_analog@output:	
   887                           ; 2 bytes @ 0x0
   888                           
   889                           
   890                           ; 2 bytes @ 0x0
   891  0049                     	ds	2
   892  004B                     ?_uart_write_voltage:	
   893  004B                     get_hall_state@hallA:	
   894                           ; 1 bytes @ 0x2
   895                           
   896  004B                     uart_write_voltage@port:	
   897                           ; 2 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  004B                     	ds	2
   902  004D                     get_hall_state@hallB:	
   903  004D                     uart_write_voltage@voltage:	
   904                           ; 2 bytes @ 0x4
   905                           
   906                           
   907                           ; 2 bytes @ 0x4
   908  004D                     	ds	2
   909  004F                     get_hall_state@hallC:	
   910                           
   911                           ; 2 bytes @ 0x6
   912  004F                     	ds	2
   913  0051                     ??_main:	
   914                           
   915                           ; 1 bytes @ 0x8
   916  0051                     	ds	3
   917                           
   918                           	psect	maintext
   919  06A3                     __pmaintext:	
   920 ;;
   921 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   922 ;;
   923 ;; *************** function _main *****************
   924 ;; Defined at:
   925 ;;		line 13 in file "main.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : B00/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       3       0       0       0
   942 ;;      Totals:         0       3       0       0       0
   943 ;;Total ram usage:        3 bytes
   944 ;; Hardware stack levels required when called:    4
   945 ;; This function calls:
   946 ;;		_setup_mcu
   947 ;;		_uart_write_voltage
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _main
   955  06A3                     _main:	
   956                           
   957                           ;main.c: 15: setup_mcu();
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   961  06A3  120A  118A  2653  120A  118A  	fcall	_setup_mcu
   962  06A8                     l9:	
   963                           ;main.c: 16: while(1)
   964                           
   965                           
   966                           ;main.c: 17: {
   967                           ;main.c: 18: uart_write_voltage(1);
   968  06A8  3001               	movlw	1
   969  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   970  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   971  06AB  00CB               	movwf	uart_write_voltage@port
   972  06AC  3000               	movlw	0
   973  06AD  00CC               	movwf	uart_write_voltage@port+1
   974  06AE  120A  118A  2684  120A  118A  	fcall	_uart_write_voltage
   975                           
   976                           ;main.c: 19: _delay((unsigned long)((500)*(8000000/4000.0)));
   977  06B3  3006               	movlw	6
   978  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   979  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   980  06B6  00D3               	movwf	??_main+2
   981  06B7  3013               	movlw	19
   982  06B8  00D2               	movwf	??_main+1
   983  06B9  30B1               	movlw	177
   984  06BA  00D1               	movwf	??_main
   985  06BB                     u857:	
   986  06BB  0BD1               	decfsz	??_main,f
   987  06BC  2EBB               	goto	u857
   988  06BD  0BD2               	decfsz	??_main+1,f
   989  06BE  2EBB               	goto	u857
   990  06BF  0BD3               	decfsz	??_main+2,f
   991  06C0  2EBB               	goto	u857
   992  06C1  2EC2               	nop2
   993  06C2  2EA8               	goto	l9
   994  06C3                     __end_of_main:	
   995                           ;main.c: 20: }
   996                           ;main.c: 21: return;
   997                           
   998                           
   999                           	psect	text1
  1000  0684                     __ptext1:	
  1001 ;; *************** function _uart_write_voltage *****************
  1002 ;; Defined at:
  1003 ;;		line 85 in file "uart.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  port            2    2[BANK0 ] int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  voltage         2    4[BANK0 ] unsigned int 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       2       0       0       0
  1018 ;;      Locals:         0       2       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         0       4       0       0       0
  1021 ;;Total ram usage:        4 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		_get_analog
  1026 ;;		_uart_write_char
  1027 ;;		_uart_write_unsigned_int
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _uart_write_voltage
  1035  0684                     _uart_write_voltage:	
  1036                           
  1037                           ;uart.c: 87: uart_write_char('v');
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _uart_write_voltage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1041  0684  3076               	movlw	118
  1042  0685  120A  118A  260F  120A  118A  	fcall	_uart_write_char
  1043                           
  1044                           ;uart.c: 88: unsigned int voltage = get_analog(port);
  1045  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1046  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1047  068C  084C               	movf	uart_write_voltage@port+1,w
  1048  068D  00F6               	movwf	get_analog@port+1
  1049  068E  084B               	movf	uart_write_voltage@port,w
  1050  068F  00F5               	movwf	get_analog@port
  1051  0690  120A  118A  2714  120A  118A  	fcall	_get_analog
  1052  0695  0876               	movf	?_get_analog+1,w
  1053  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0698  00CE               	movwf	uart_write_voltage@voltage+1
  1056  0699  0875               	movf	?_get_analog,w
  1057  069A  00CD               	movwf	uart_write_voltage@voltage
  1058                           
  1059                           ;uart.c: 89: uart_write_unsigned_int(voltage);
  1060  069B  084E               	movf	uart_write_voltage@voltage+1,w
  1061  069C  00F2               	movwf	uart_write_unsigned_int@number+1
  1062  069D  084D               	movf	uart_write_voltage@voltage,w
  1063  069E  00F1               	movwf	uart_write_unsigned_int@number
  1064  069F  120A  118A  2666   	fcall	_uart_write_unsigned_int
  1065  06A2  0008               	return
  1066  06A3                     __end_of_uart_write_voltage:	
  1067                           
  1068                           	psect	text2
  1069  0666                     __ptext2:	
  1070 ;; *************** function _uart_write_unsigned_int *****************
  1071 ;; Defined at:
  1072 ;;		line 27 in file "uart.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  number          2    0[COMMON] unsigned int 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  char2           1    5[COMMON] unsigned char 
  1077 ;;  char1           1    4[COMMON] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         2       0       0       0       0
  1088 ;;      Locals:         2       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0
  1090 ;;      Totals:         6       0       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_uart_write_voltage
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _uart_write_unsigned_int
  1102  0666                     _uart_write_unsigned_int:	
  1103  0666                     l239:	
  1104                           ;uart.c: 29: while(!TRMT);
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _uart_write_unsigned_int: [wreg+status,2]
  1108                           
  1109  0666  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0667  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0668  1C98               	btfss	24,1	;volatile
  1112  0669  2E66               	goto	l239
  1113                           
  1114                           ;uart.c: 30: char char1 = number & 0xFF;
  1115  066A  0871               	movf	uart_write_unsigned_int@number,w
  1116  066B  00F3               	movwf	??_uart_write_unsigned_int
  1117  066C  0873               	movf	??_uart_write_unsigned_int,w
  1118  066D  00F5               	movwf	uart_write_unsigned_int@char1
  1119                           
  1120                           ;uart.c: 31: TXREG = char1;
  1121  066E  0875               	movf	uart_write_unsigned_int@char1,w
  1122  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0671  0099               	movwf	25	;volatile
  1125                           
  1126                           ;uart.c: 32: _delay((unsigned long)((1)*(8000000/4000.0)));
  1127  0672  3003               	movlw	3
  1128  0673  00F4               	movwf	??_uart_write_unsigned_int+1
  1129  0674  3097               	movlw	151
  1130  0675  00F3               	movwf	??_uart_write_unsigned_int
  1131  0676                     u867:	
  1132  0676  0BF3               	decfsz	??_uart_write_unsigned_int,f
  1133  0677  2E76               	goto	u867
  1134  0678  0BF4               	decfsz	??_uart_write_unsigned_int+1,f
  1135  0679  2E76               	goto	u867
  1136  067A  2E7B               	nop2
  1137                           
  1138                           ;uart.c: 33: char char2 = number >> 8;
  1139  067B  0872               	movf	uart_write_unsigned_int@number+1,w
  1140  067C  00F3               	movwf	??_uart_write_unsigned_int
  1141  067D  0873               	movf	??_uart_write_unsigned_int,w
  1142  067E  00F6               	movwf	uart_write_unsigned_int@char2
  1143                           
  1144                           ;uart.c: 34: TXREG = char2;
  1145  067F  0876               	movf	uart_write_unsigned_int@char2,w
  1146  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0682  0099               	movwf	25	;volatile
  1149  0683  0008               	return
  1150  0684                     __end_of_uart_write_unsigned_int:	
  1151                           
  1152                           	psect	text3
  1153  060F                     __ptext3:	
  1154 ;; *************** function _uart_write_char *****************
  1155 ;; Defined at:
  1156 ;;		line 12 in file "uart.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  data            1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  data            1    0[COMMON] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         1       0       0       0       0
  1174 ;;Total ram usage:        1 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_uart_write_voltage
  1180 ;;		_uart_write_string
  1181 ;;		_uart_write_hall_state
  1182 ;;		_uart_write_direction
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _uart_write_char
  1188  060F                     _uart_write_char:	
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _uart_write_char: [wreg]
  1192                           ;uart_write_char@data stored from wreg
  1193  060F  00F1               	movwf	uart_write_char@data
  1194  0610                     l227:	
  1195                           ;uart.c: 14: while(!TRMT);
  1196                           
  1197  0610  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0611  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0612  1C98               	btfss	24,1	;volatile
  1200  0613  2E10               	goto	l227
  1201                           
  1202                           ;uart.c: 16: TXREG = data;
  1203  0614  0871               	movf	uart_write_char@data,w
  1204  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0617  0099               	movwf	25	;volatile
  1207  0618  0008               	return
  1208  0619                     __end_of_uart_write_char:	
  1209                           
  1210                           	psect	text4
  1211  0714                     __ptext4:	
  1212 ;; *************** function _get_analog *****************
  1213 ;; Defined at:
  1214 ;;		line 53 in file "analog.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  port            2    4[COMMON] int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  output          2    0[BANK0 ] unsigned int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    4[COMMON] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         2       0       0       0       0
  1229 ;;      Locals:         0       2       0       0       0
  1230 ;;      Temps:          6       0       0       0       0
  1231 ;;      Totals:         8       2       0       0       0
  1232 ;;Total ram usage:       10 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    1
  1235 ;; This function calls:
  1236 ;;		_analog_init
  1237 ;; This function is called by:
  1238 ;;		_uart_write_voltage
  1239 ;;		_read_current
  1240 ;;		_read_phase1
  1241 ;;		_read_phase2
  1242 ;;		_read_phase3
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _get_analog
  1248  0714                     _get_analog:	
  1249                           
  1250                           ;analog.c: 55: analog_init(port);
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _get_analog: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1254  0714  0876               	movf	get_analog@port+1,w
  1255  0715  00F2               	movwf	analog_init@analog_port+1
  1256  0716  0875               	movf	get_analog@port,w
  1257  0717  00F1               	movwf	analog_init@analog_port
  1258  0718  120A  118A  2741  120A  118A  	fcall	_analog_init
  1259                           
  1260                           ;analog.c: 56: ADCON0bits.GO = 1;
  1261  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1262  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1263  071F  149F               	bsf	31,1	;volatile
  1264  0720                     l191:	
  1265                           ;analog.c: 57: while(!ADCON0bits.GO_DONE) continue;
  1266                           
  1267  0720  1C9F               	btfss	31,1	;volatile
  1268  0721  2F20               	goto	l191
  1269                           
  1270                           ;analog.c: 59: unsigned int output = (ADRESL<<2)|ADRESH;
  1271  0722  081E               	movf	30,w	;volatile
  1272  0723  00F7               	movwf	??_get_analog
  1273  0724  01F8               	clrf	??_get_analog+1
  1274  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0727  081E               	movf	30,w	;volatile
  1277  0728  00F9               	movwf	??_get_analog+2
  1278  0729  01FA               	clrf	??_get_analog+3
  1279  072A  1003               	clrc
  1280  072B  0DF9               	rlf	??_get_analog+2,f
  1281  072C  0DFA               	rlf	??_get_analog+3,f
  1282  072D  1003               	clrc
  1283  072E  0DF9               	rlf	??_get_analog+2,f
  1284  072F  0DFA               	rlf	??_get_analog+3,f
  1285  0730  0877               	movf	??_get_analog,w
  1286  0731  0479               	iorwf	??_get_analog+2,w
  1287  0732  00FB               	movwf	??_get_analog+4
  1288  0733  0878               	movf	??_get_analog+1,w
  1289  0734  047A               	iorwf	??_get_analog+3,w
  1290  0735  00FC               	movwf	??_get_analog+5
  1291  0736  087B               	movf	??_get_analog+4,w
  1292  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0739  00C9               	movwf	get_analog@output
  1295  073A  087C               	movf	??_get_analog+5,w
  1296  073B  00CA               	movwf	get_analog@output+1
  1297                           
  1298                           ;analog.c: 60: return output;
  1299  073C  084A               	movf	get_analog@output+1,w
  1300  073D  00F6               	movwf	?_get_analog+1
  1301  073E  0849               	movf	get_analog@output,w
  1302  073F  00F5               	movwf	?_get_analog
  1303  0740  0008               	return
  1304  0741                     __end_of_get_analog:	
  1305                           
  1306                           	psect	text5
  1307  0741                     __ptext5:	
  1308 ;; *************** function _analog_init *****************
  1309 ;; Defined at:
  1310 ;;		line 9 in file "analog.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  analog_port     2    0[COMMON] int 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         2       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0
  1326 ;;      Temps:          2       0       0       0       0
  1327 ;;      Totals:         4       0       0       0       0
  1328 ;;Total ram usage:        4 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_get_analog
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _analog_init
  1339  0741                     _analog_init:	
  1340                           
  1341                           ;analog.c: 20: ADCON0bits.VCFG1 = 0;
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _analog_init: [wreg-fsr0h+status,2+status,0]
  1345  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0743  131F               	bcf	31,6	;volatile
  1348                           
  1349                           ;analog.c: 21: ADCON0bits.VCFG0 = 0;
  1350  0744  129F               	bcf	31,5	;volatile
  1351                           
  1352                           ;analog.c: 22: ADCON0bits.ADFM = 1;
  1353  0745  179F               	bsf	31,7	;volatile
  1354                           
  1355                           ;analog.c: 23: switch(analog_port)
  1356  0746  2F57               	goto	l1188
  1357  0747                     l1178:	
  1358                           ;analog.c: 24: {
  1359                           ;analog.c: 25: case 1:
  1360                           
  1361                           
  1362                           ;analog.c: 26: ADCON0bits.CHS = 0;
  1363  0747  30E3               	movlw	-29
  1364  0748  059F               	andwf	31,f	;volatile
  1365                           
  1366                           ;analog.c: 27: break;
  1367  0749  2F6A               	goto	l1190
  1368  074A                     l1180:	
  1369                           ;analog.c: 28: case 2:
  1370                           
  1371                           
  1372                           ;analog.c: 29: ADCON0bits.CHS = 1;
  1373  074A  081F               	movf	31,w	;volatile
  1374  074B  39E3               	andlw	-29
  1375  074C  3804               	iorlw	4
  1376  074D  2F55               	goto	L2
  1377  074E                     l1182:	
  1378                           ;analog.c: 31: case 3:
  1379                           
  1380                           ;analog.c: 30: break;
  1381                           
  1382                           
  1383                           ;analog.c: 32: ADCON0bits.CHS = 2;
  1384  074E  081F               	movf	31,w	;volatile
  1385  074F  39E3               	andlw	-29
  1386  0750  3808               	iorlw	8
  1387  0751  2F55               	goto	L2
  1388  0752                     l1184:	
  1389                           ;analog.c: 34: case 4:
  1390                           
  1391                           ;analog.c: 33: break;
  1392                           
  1393                           
  1394                           ;analog.c: 35: ADCON0bits.CHS = 3;
  1395  0752  081F               	movf	31,w	;volatile
  1396  0753  39E3               	andlw	-29
  1397  0754  380C               	iorlw	12
  1398  0755                     L2:	
  1399  0755  009F               	movwf	31	;volatile
  1400                           
  1401                           ;analog.c: 39: }
  1402                           
  1403                           ;analog.c: 38: break;
  1404                           
  1405                           ;analog.c: 37: default:
  1406                           
  1407                           ;analog.c: 36: break;
  1408  0756  2F6A               	goto	l1190
  1409  0757                     l1188:	
  1410                           
  1411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1412                           ; Switch size 1, requested type "space"
  1413                           ; Number of cases is 1, Range of values is 0 to 0
  1414                           ; switch strategies available:
  1415                           ; Name         Instructions Cycles
  1416                           ; simple_byte            4     3 (average)
  1417                           ; direct_byte           11     8 (fixed)
  1418                           ; jumptable            260     6 (fixed)
  1419                           ;	Chosen strategy is simple_byte
  1420  0757  0872               	movf	analog_init@analog_port+1,w
  1421  0758  3A00               	xorlw	0	; case 0
  1422  0759  1903               	skipnz
  1423  075A  2F5C               	goto	l1376
  1424  075B  2F6A               	goto	l1190
  1425  075C                     l1376:	
  1426                           
  1427                           ; Switch size 1, requested type "space"
  1428                           ; Number of cases is 4, Range of values is 1 to 4
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte           13     7 (average)
  1432                           ; direct_byte           23    11 (fixed)
  1433                           ; jumptable            263     9 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  075C  0871               	movf	analog_init@analog_port,w
  1436  075D  3A01               	xorlw	1	; case 1
  1437  075E  1903               	skipnz
  1438  075F  2F47               	goto	l1178
  1439  0760  3A03               	xorlw	3	; case 2
  1440  0761  1903               	skipnz
  1441  0762  2F4A               	goto	l1180
  1442  0763  3A01               	xorlw	1	; case 3
  1443  0764  1903               	skipnz
  1444  0765  2F4E               	goto	l1182
  1445  0766  3A07               	xorlw	7	; case 4
  1446  0767  1903               	skipnz
  1447  0768  2F52               	goto	l1184
  1448  0769  2F6A               	goto	l1190
  1449  076A                     l1190:	
  1450                           
  1451                           ;analog.c: 47: _delay((unsigned long)((2)*(8000000/4000.0)));
  1452  076A  3006               	movlw	6
  1453  076B  00F4               	movwf	??_analog_init+1
  1454  076C  3030               	movlw	48
  1455  076D  00F3               	movwf	??_analog_init
  1456  076E                     u877:	
  1457  076E  0BF3               	decfsz	??_analog_init,f
  1458  076F  2F6E               	goto	u877
  1459  0770  0BF4               	decfsz	??_analog_init+1,f
  1460  0771  2F6E               	goto	u877
  1461  0772  0000               	nop
  1462                           
  1463                           ;analog.c: 48: ADCON1 = 0b01010000;
  1464  0773  3050               	movlw	80
  1465  0774  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0775  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0776  009F               	movwf	31	;volatile
  1468                           
  1469                           ;analog.c: 50: ADCON0bits.ADON = 1;
  1470  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0779  141F               	bsf	31,0	;volatile
  1473  077A  0008               	return
  1474  077B                     __end_of_analog_init:	
  1475                           
  1476                           	psect	text6
  1477  0653                     __ptext6:	
  1478 ;; *************** function _setup_mcu *****************
  1479 ;; Defined at:
  1480 ;;		line 9 in file "micro_setup.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    3
  1501 ;; This function calls:
  1502 ;;		_init_hall
  1503 ;;		_init_pin
  1504 ;;		_init_uart
  1505 ;;		_setup_port
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function _setup_mcu
  1513  0653                     _setup_mcu:	
  1514                           
  1515                           ;micro_setup.c: 11: setup_port();
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _setup_mcu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1519  0653  120A  118A  2626  120A  118A  	fcall	_setup_port
  1520                           
  1521                           ;micro_setup.c: 12: init_pin();
  1522  0658  120A  118A  2633  120A  118A  	fcall	_init_pin
  1523                           
  1524                           ;micro_setup.c: 13: init_hall();
  1525  065D  120A  118A  2605  120A  118A  	fcall	_init_hall
  1526                           
  1527                           ;micro_setup.c: 14: init_uart();
  1528  0662  120A  118A  2619   	fcall	_init_uart
  1529  0665  0008               	return
  1530  0666                     __end_of_setup_mcu:	
  1531                           
  1532                           	psect	text7
  1533  0626                     __ptext7:	
  1534 ;; *************** function _setup_port *****************
  1535 ;; Defined at:
  1536 ;;		line 17 in file "micro_setup.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_setup_mcu
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _setup_port
  1565  0626                     _setup_port:	
  1566                           
  1567                           ;micro_setup.c: 19: TRISA = 0b10001111;
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _setup_port: [wreg+status,2]
  1571  0626  308F               	movlw	143
  1572  0627  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0628  1303               	bcf	3,6	;RP1=0, select bank1
  1574  0629  0085               	movwf	5	;volatile
  1575                           
  1576                           ;micro_setup.c: 21: TRISB = 0b00000000;
  1577  062A  0186               	clrf	6	;volatile
  1578                           
  1579                           ;micro_setup.c: 23: TRISC = 0b10000000;
  1580  062B  3080               	movlw	128
  1581  062C  0087               	movwf	7	;volatile
  1582                           
  1583                           ;micro_setup.c: 25: TRISD = 0b00000000;
  1584  062D  0188               	clrf	8	;volatile
  1585                           
  1586                           ;micro_setup.c: 27: TRISE = 0b00000111;
  1587  062E  3007               	movlw	7
  1588  062F  0089               	movwf	9	;volatile
  1589                           
  1590                           ;micro_setup.c: 29: ANSEL = 0b00001111;
  1591  0630  300F               	movlw	15
  1592  0631  0091               	movwf	17	;volatile
  1593  0632  0008               	return
  1594  0633                     __end_of_setup_port:	
  1595                           
  1596                           	psect	text8
  1597  0619                     __ptext8:	
  1598 ;; *************** function _init_uart *****************
  1599 ;; Defined at:
  1600 ;;		line 34 in file "micro_setup.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0
  1617 ;;      Totals:         0       0       0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_setup_mcu
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           
  1628                           ;psect for function _init_uart
  1629  0619                     _init_uart:	
  1630                           
  1631                           ;micro_setup.c: 36: TXSTA = 0b00100000;
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _init_uart: [wreg]
  1635  0619  3020               	movlw	32
  1636  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1637  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1638  061C  0098               	movwf	24	;volatile
  1639                           
  1640                           ;micro_setup.c: 48: SPBRG = 12;
  1641  061D  300C               	movlw	12
  1642  061E  0099               	movwf	25	;volatile
  1643                           
  1644                           ;micro_setup.c: 61: RCSTAbits.SPEN=1;
  1645  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0621  1798               	bsf	24,7	;volatile
  1648                           
  1649                           ;micro_setup.c: 62: RCSTAbits.RX9=0;
  1650  0622  1318               	bcf	24,6	;volatile
  1651                           
  1652                           ;micro_setup.c: 63: RCSTAbits.CREN=1;
  1653  0623  1618               	bsf	24,4	;volatile
  1654                           
  1655                           ;micro_setup.c: 64: RCSTAbits.ADDEN=0;
  1656  0624  1198               	bcf	24,3	;volatile
  1657  0625  0008               	return
  1658  0626                     __end_of_init_uart:	
  1659                           
  1660                           	psect	text9
  1661  0633                     __ptext9:	
  1662 ;; *************** function _init_pin *****************
  1663 ;; Defined at:
  1664 ;;		line 73 in file "micro_setup.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		None
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_setup_mcu
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _init_pin
  1693  0633                     _init_pin:	
  1694                           
  1695                           ;micro_setup.c: 75: PORTCbits.RC0 = (0);
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _init_pin: []
  1699  0633  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0634  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0635  1007               	bcf	7,0	;volatile
  1702                           
  1703                           ;micro_setup.c: 76: PORTCbits.RC1 = (0);
  1704  0636  1087               	bcf	7,1	;volatile
  1705                           
  1706                           ;micro_setup.c: 77: PORTCbits.RC2 = (0);
  1707  0637  1107               	bcf	7,2	;volatile
  1708                           
  1709                           ;micro_setup.c: 78: PORTCbits.RC3 = (0);
  1710  0638  1187               	bcf	7,3	;volatile
  1711                           
  1712                           ;micro_setup.c: 79: PORTCbits.RC4 = (0);
  1713  0639  1207               	bcf	7,4	;volatile
  1714                           
  1715                           ;micro_setup.c: 80: PORTCbits.RC5 = (0);
  1716  063A  1287               	bcf	7,5	;volatile
  1717                           
  1718                           ;micro_setup.c: 82: PORTDbits.RD0 = (0);
  1719  063B  1008               	bcf	8,0	;volatile
  1720                           
  1721                           ;micro_setup.c: 83: PORTDbits.RD1 = (0);
  1722  063C  1088               	bcf	8,1	;volatile
  1723                           
  1724                           ;micro_setup.c: 84: PORTDbits.RD2 = (0);
  1725  063D  1108               	bcf	8,2	;volatile
  1726                           
  1727                           ;micro_setup.c: 85: PORTDbits.RD3 = (0);
  1728  063E  1188               	bcf	8,3	;volatile
  1729                           
  1730                           ;micro_setup.c: 86: PORTDbits.RD4 = (0);
  1731  063F  1208               	bcf	8,4	;volatile
  1732                           
  1733                           ;micro_setup.c: 87: PORTDbits.RD5 = (0);
  1734  0640  1288               	bcf	8,5	;volatile
  1735  0641  0008               	return
  1736  0642                     __end_of_init_pin:	
  1737                           
  1738                           	psect	text10
  1739  0605                     __ptext10:	
  1740 ;; *************** function _init_hall *****************
  1741 ;; Defined at:
  1742 ;;		line 90 in file "micro_setup.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    2
  1763 ;; This function calls:
  1764 ;;		_get_hall_state
  1765 ;; This function is called by:
  1766 ;;		_setup_mcu
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _init_hall
  1772  0605                     _init_hall:	
  1773                           
  1774                           ;micro_setup.c: 92: init_state = get_hall_state();
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _init_hall: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1778  0605  120A  118A  277B   	fcall	_get_hall_state
  1779  0608  0878               	movf	?_get_hall_state+1,w
  1780  0609  1283               	bcf	3,5	;RP0=0, select bank0
  1781  060A  1303               	bcf	3,6	;RP1=0, select bank0
  1782  060B  00D5               	movwf	_init_state+1
  1783  060C  0877               	movf	?_get_hall_state,w
  1784  060D  00D4               	movwf	_init_state
  1785  060E  0008               	return
  1786  060F                     __end_of_init_hall:	
  1787                           
  1788                           	psect	text11
  1789  077B                     __ptext11:	
  1790 ;; *************** function _get_hall_state *****************
  1791 ;; Defined at:
  1792 ;;		line 15 in file "hall_effect.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;		None
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  hallC           2    6[BANK0 ] int 
  1797 ;;  hallB           2    4[BANK0 ] int 
  1798 ;;  hallA           2    2[BANK0 ] int 
  1799 ;;  state           2    0[BANK0 ] int 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    6[COMMON] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         2       0       0       0       0
  1810 ;;      Locals:         0       8       0       0       0
  1811 ;;      Temps:          2       0       0       0       0
  1812 ;;      Totals:         4       8       0       0       0
  1813 ;;Total ram usage:       12 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    1
  1816 ;; This function calls:
  1817 ;;		_read_hall
  1818 ;; This function is called by:
  1819 ;;		_init_hall
  1820 ;;		_hall_LED_state
  1821 ;;		_get_direction
  1822 ;;		_uart_write_hall_state
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _get_hall_state
  1828  077B                     _get_hall_state:	
  1829                           
  1830                           ;hall_effect.c: 17: int hallA;
  1831                           ;hall_effect.c: 18: int hallB;
  1832                           ;hall_effect.c: 19: int hallC;
  1833                           ;hall_effect.c: 20: int state;
  1834                           ;hall_effect.c: 21: read_hall(&hallA, &hallB, &hallC);
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _get_hall_state: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1838  077B  304D               	movlw	(low (get_hall_state@hallB| 0))& (0+255)
  1839  077C  00F9               	movwf	??_get_hall_state
  1840  077D  0879               	movf	??_get_hall_state,w
  1841  077E  00F1               	movwf	read_hall@hall_B
  1842  077F  304F               	movlw	(low (get_hall_state@hallC| 0))& (0+255)
  1843  0780  00FA               	movwf	??_get_hall_state+1
  1844  0781  087A               	movf	??_get_hall_state+1,w
  1845  0782  00F2               	movwf	read_hall@hall_C
  1846  0783  304B               	movlw	(low (get_hall_state@hallA| 0))& (0+255)
  1847  0784  120A  118A  26C3  120A  118A  	fcall	_read_hall
  1848                           
  1849                           ;hall_effect.c: 22: if(hallA && !hallB && hallC)
  1850  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1851  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1852  078B  084B               	movf	get_hall_state@hallA,w
  1853  078C  044C               	iorwf	get_hall_state@hallA+1,w
  1854  078D  1903               	btfsc	3,2
  1855  078E  2F9B               	goto	l1134
  1856  078F  084D               	movf	get_hall_state@hallB,w
  1857  0790  044E               	iorwf	get_hall_state@hallB+1,w
  1858  0791  1D03               	btfss	3,2
  1859  0792  2F9B               	goto	l1134
  1860  0793  084F               	movf	get_hall_state@hallC,w
  1861  0794  0450               	iorwf	get_hall_state@hallC+1,w
  1862  0795  1903               	btfsc	3,2
  1863  0796  2F9B               	goto	l1134
  1864                           
  1865                           ;hall_effect.c: 23: {
  1866                           ;hall_effect.c: 24: state = 1;
  1867  0797  3001               	movlw	1
  1868  0798  00C9               	movwf	get_hall_state@state
  1869  0799  3000               	movlw	0
  1870  079A  00CA               	movwf	get_hall_state@state+1
  1871  079B                     l1134:	
  1872                           
  1873                           ;hall_effect.c: 25: }
  1874                           ;hall_effect.c: 26: if(hallA && !hallB && !hallC)
  1875  079B  084B               	movf	get_hall_state@hallA,w
  1876  079C  044C               	iorwf	get_hall_state@hallA+1,w
  1877  079D  1903               	btfsc	3,2
  1878  079E  2FAB               	goto	l1142
  1879  079F  084D               	movf	get_hall_state@hallB,w
  1880  07A0  044E               	iorwf	get_hall_state@hallB+1,w
  1881  07A1  1D03               	btfss	3,2
  1882  07A2  2FAB               	goto	l1142
  1883  07A3  084F               	movf	get_hall_state@hallC,w
  1884  07A4  0450               	iorwf	get_hall_state@hallC+1,w
  1885  07A5  1D03               	btfss	3,2
  1886  07A6  2FAB               	goto	l1142
  1887                           
  1888                           ;hall_effect.c: 27: {
  1889                           ;hall_effect.c: 28: state = 2;
  1890  07A7  3002               	movlw	2
  1891  07A8  00C9               	movwf	get_hall_state@state
  1892  07A9  3000               	movlw	0
  1893  07AA  00CA               	movwf	get_hall_state@state+1
  1894  07AB                     l1142:	
  1895                           
  1896                           ;hall_effect.c: 29: }
  1897                           ;hall_effect.c: 30: if(hallA && hallB && !hallC)
  1898  07AB  084B               	movf	get_hall_state@hallA,w
  1899  07AC  044C               	iorwf	get_hall_state@hallA+1,w
  1900  07AD  1903               	btfsc	3,2
  1901  07AE  2FBB               	goto	l1150
  1902  07AF  084D               	movf	get_hall_state@hallB,w
  1903  07B0  044E               	iorwf	get_hall_state@hallB+1,w
  1904  07B1  1903               	btfsc	3,2
  1905  07B2  2FBB               	goto	l1150
  1906  07B3  084F               	movf	get_hall_state@hallC,w
  1907  07B4  0450               	iorwf	get_hall_state@hallC+1,w
  1908  07B5  1D03               	btfss	3,2
  1909  07B6  2FBB               	goto	l1150
  1910                           
  1911                           ;hall_effect.c: 31: {
  1912                           ;hall_effect.c: 32: state = 3;
  1913  07B7  3003               	movlw	3
  1914  07B8  00C9               	movwf	get_hall_state@state
  1915  07B9  3000               	movlw	0
  1916  07BA  00CA               	movwf	get_hall_state@state+1
  1917  07BB                     l1150:	
  1918                           
  1919                           ;hall_effect.c: 33: }
  1920                           ;hall_effect.c: 34: if(!hallA && hallB && !hallC)
  1921  07BB  084B               	movf	get_hall_state@hallA,w
  1922  07BC  044C               	iorwf	get_hall_state@hallA+1,w
  1923  07BD  1D03               	btfss	3,2
  1924  07BE  2FCB               	goto	l1158
  1925  07BF  084D               	movf	get_hall_state@hallB,w
  1926  07C0  044E               	iorwf	get_hall_state@hallB+1,w
  1927  07C1  1903               	btfsc	3,2
  1928  07C2  2FCB               	goto	l1158
  1929  07C3  084F               	movf	get_hall_state@hallC,w
  1930  07C4  0450               	iorwf	get_hall_state@hallC+1,w
  1931  07C5  1D03               	btfss	3,2
  1932  07C6  2FCB               	goto	l1158
  1933                           
  1934                           ;hall_effect.c: 35: {
  1935                           ;hall_effect.c: 36: state = 4;
  1936  07C7  3004               	movlw	4
  1937  07C8  00C9               	movwf	get_hall_state@state
  1938  07C9  3000               	movlw	0
  1939  07CA  00CA               	movwf	get_hall_state@state+1
  1940  07CB                     l1158:	
  1941                           
  1942                           ;hall_effect.c: 37: }
  1943                           ;hall_effect.c: 38: if(!hallA && hallB && hallC)
  1944  07CB  084B               	movf	get_hall_state@hallA,w
  1945  07CC  044C               	iorwf	get_hall_state@hallA+1,w
  1946  07CD  1D03               	btfss	3,2
  1947  07CE  2FDB               	goto	l1166
  1948  07CF  084D               	movf	get_hall_state@hallB,w
  1949  07D0  044E               	iorwf	get_hall_state@hallB+1,w
  1950  07D1  1903               	btfsc	3,2
  1951  07D2  2FDB               	goto	l1166
  1952  07D3  084F               	movf	get_hall_state@hallC,w
  1953  07D4  0450               	iorwf	get_hall_state@hallC+1,w
  1954  07D5  1903               	btfsc	3,2
  1955  07D6  2FDB               	goto	l1166
  1956                           
  1957                           ;hall_effect.c: 39: {
  1958                           ;hall_effect.c: 40: state = 5;
  1959  07D7  3005               	movlw	5
  1960  07D8  00C9               	movwf	get_hall_state@state
  1961  07D9  3000               	movlw	0
  1962  07DA  00CA               	movwf	get_hall_state@state+1
  1963  07DB                     l1166:	
  1964                           
  1965                           ;hall_effect.c: 41: }
  1966                           ;hall_effect.c: 42: if(!hallA && !hallB && hallC)
  1967  07DB  084B               	movf	get_hall_state@hallA,w
  1968  07DC  044C               	iorwf	get_hall_state@hallA+1,w
  1969  07DD  1D03               	btfss	3,2
  1970  07DE  2FEB               	goto	l150
  1971  07DF  084D               	movf	get_hall_state@hallB,w
  1972  07E0  044E               	iorwf	get_hall_state@hallB+1,w
  1973  07E1  1D03               	btfss	3,2
  1974  07E2  2FEB               	goto	l150
  1975  07E3  084F               	movf	get_hall_state@hallC,w
  1976  07E4  0450               	iorwf	get_hall_state@hallC+1,w
  1977  07E5  1903               	btfsc	3,2
  1978  07E6  2FEB               	goto	l150
  1979                           
  1980                           ;hall_effect.c: 43: {
  1981                           ;hall_effect.c: 44: state = 6;
  1982  07E7  3006               	movlw	6
  1983  07E8  00C9               	movwf	get_hall_state@state
  1984  07E9  3000               	movlw	0
  1985  07EA  00CA               	movwf	get_hall_state@state+1
  1986  07EB                     l150:	
  1987                           
  1988                           ;hall_effect.c: 45: }
  1989                           ;hall_effect.c: 46: return state;
  1990  07EB  084A               	movf	get_hall_state@state+1,w
  1991  07EC  00F8               	movwf	?_get_hall_state+1
  1992  07ED  0849               	movf	get_hall_state@state,w
  1993  07EE  00F7               	movwf	?_get_hall_state
  1994  07EF  0008               	return
  1995  07F0                     __end_of_get_hall_state:	
  1996                           
  1997                           	psect	text12
  1998  06C3                     __ptext12:	
  1999 ;; *************** function _read_hall *****************
  2000 ;; Defined at:
  2001 ;;		line 8 in file "hall_effect.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  hall_A          1    wreg     PTR int 
  2004 ;;		 -> get_hall_state@hallA(2), 
  2005 ;;  hall_B          1    0[COMMON] PTR int 
  2006 ;;		 -> get_hall_state@hallB(2), 
  2007 ;;  hall_C          1    1[COMMON] PTR int 
  2008 ;;		 -> get_hall_state@hallC(2), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  hall_A          1    5[COMMON] PTR int 
  2011 ;;		 -> get_hall_state@hallA(2), 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         2       0       0       0       0
  2022 ;;      Locals:         1       0       0       0       0
  2023 ;;      Temps:          3       0       0       0       0
  2024 ;;      Totals:         6       0       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_get_hall_state
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _read_hall
  2036  06C3                     _read_hall:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _read_hall: [wreg-fsr0h+status,2+status,0]
  2040                           ;read_hall@hall_A stored from wreg
  2041  06C3  00F6               	movwf	read_hall@hall_A
  2042                           
  2043                           ;hall_effect.c: 10: *hall_A = PORTEbits.RE2;
  2044  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  2045  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  2046  06C6  0C09               	rrf	9,w	;volatile
  2047  06C7  00F3               	movwf	??_read_hall
  2048  06C8  0C73               	rrf	??_read_hall,w
  2049  06C9  3901               	andlw	1
  2050  06CA  00F4               	movwf	??_read_hall+1
  2051  06CB  01F5               	clrf	??_read_hall+2
  2052  06CC  0876               	movf	read_hall@hall_A,w
  2053  06CD  0084               	movwf	4
  2054  06CE  0874               	movf	??_read_hall+1,w
  2055  06CF  1383               	bcf	3,7	;select IRP bank0
  2056  06D0  0080               	movwf	0
  2057  06D1  0A84               	incf	4,f
  2058  06D2  0875               	movf	??_read_hall+2,w
  2059  06D3  0080               	movwf	0
  2060                           
  2061                           ;hall_effect.c: 11: *hall_B = PORTEbits.RE1;
  2062  06D4  0C09               	rrf	9,w	;volatile
  2063  06D5  3901               	andlw	1
  2064  06D6  00F3               	movwf	??_read_hall
  2065  06D7  01F4               	clrf	??_read_hall+1
  2066  06D8  0871               	movf	read_hall@hall_B,w
  2067  06D9  0084               	movwf	4
  2068  06DA  0873               	movf	??_read_hall,w
  2069  06DB  0080               	movwf	0
  2070  06DC  0A84               	incf	4,f
  2071  06DD  0874               	movf	??_read_hall+1,w
  2072  06DE  0080               	movwf	0
  2073                           
  2074                           ;hall_effect.c: 12: *hall_C = PORTEbits.RE0;
  2075  06DF  0809               	movf	9,w	;volatile
  2076  06E0  3901               	andlw	1
  2077  06E1  00F3               	movwf	??_read_hall
  2078  06E2  01F4               	clrf	??_read_hall+1
  2079  06E3  0872               	movf	read_hall@hall_C,w
  2080  06E4  0084               	movwf	4
  2081  06E5  0873               	movf	??_read_hall,w
  2082  06E6  0080               	movwf	0
  2083  06E7  0A84               	incf	4,f
  2084  06E8  0874               	movf	??_read_hall+1,w
  2085  06E9  0080               	movwf	0
  2086  06EA  0008               	return
  2087  06EB                     __end_of_read_hall:	
  2088  007E                     btemp	set	126	;btemp
  2089  007E                     wtemp	set	126
  2090  007E                     wtemp0	set	126
  2091  0080                     wtemp1	set	128
  2092  0082                     wtemp2	set	130
  2093  0084                     wtemp3	set	132
  2094  0086                     wtemp4	set	134
  2095  0088                     wtemp5	set	136
  2096  007F                     wtemp6	set	127
  2097  007E                     ttemp	set	126
  2098  007E                     ttemp0	set	126
  2099  0081                     ttemp1	set	129
  2100  0084                     ttemp2	set	132
  2101  0087                     ttemp3	set	135
  2102  007F                     ttemp4	set	127
  2103  007E                     ltemp	set	126
  2104  007E                     ltemp0	set	126
  2105  0082                     ltemp1	set	130
  2106  0086                     ltemp2	set	134
  2107  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        41
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      12
    BANK0            80     11      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            69      0       0

Pointer List with Targets:

    read_hall@hall_C	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallC(BANK0[2]), 

    read_hall@hall_B	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallB(BANK0[2]), 

    read_hall@hall_A	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallA(BANK0[2]), 


Critical Paths under _main in COMMON

    _uart_write_voltage->_get_analog
    _get_analog->_analog_init
    _init_hall->_get_hall_state
    _get_hall_state->_read_hall

Critical Paths under _main in BANK0

    _uart_write_voltage->_get_analog
    _init_hall->_get_hall_state

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1343
                                              8 BANK0      3     3      0
                          _setup_mcu
                 _uart_write_voltage
 ---------------------------------------------------------------------------------
 (1) _uart_write_voltage                                   4     2      2     648
                                              2 BANK0      4     2      2
                         _get_analog
                    _uart_write_char
            _uart_write_unsigned_int
 ---------------------------------------------------------------------------------
 (2) _uart_write_unsigned_int                              6     4      2     143
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _uart_write_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_analog                                          10     8      2     385
                                              4 COMMON     8     6      2
                                              0 BANK0      2     2      0
                        _analog_init
 ---------------------------------------------------------------------------------
 (3) _analog_init                                          4     2      2      75
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _setup_mcu                                            0     0      0     695
                          _init_hall
                           _init_pin
                          _init_uart
                         _setup_port
 ---------------------------------------------------------------------------------
 (2) _setup_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pin                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_hall                                            0     0      0     695
                     _get_hall_state
 ---------------------------------------------------------------------------------
 (3) _get_hall_state                                      12    10      2     695
                                              6 COMMON     4     2      2
                                              0 BANK0      8     8      0
                          _read_hall
 ---------------------------------------------------------------------------------
 (4) _read_hall                                            6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup_mcu
     _init_hall
       _get_hall_state
         _read_hall
     _init_pin
     _init_uart
     _setup_port
   _uart_write_voltage
     _get_analog
       _analog_init
     _uart_write_char
     _uart_write_unsigned_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       8        0.0%
BITBANK3            60      0       0       7        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               45      0       0       9        0.0%
BITBANK2            45      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      36       4       67.5%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      C       C       1       92.3%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      42      12        0.0%
ABS                  0      0      42      10        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Nov 05 21:39:45 2016

                               l9 06A8                                 pc 0002                       __CFG_CP$OFF 0000  
                              fsr 0004                               l150 07EB                               l227 0610  
                             l191 0720                               l239 0666                      __CFG_CPD$OFF 0000  
                             u857 06BB                               u867 0676                               u877 076E  
                             fsr0 0004                               indf 0000                      __CFG_IESO$ON 0000  
                    __CFG_FOSC$HS 0000                              l1150 07BB                              l1142 07AB  
                            l1134 079B                              l1180 074A                              l1166 07DB  
                            l1158 07CB                              l1182 074E                              l1190 076A  
                            l1184 0752                              l1178 0747                              l1188 0757  
                            l1376 075C                     __CFG_DEBUG$ON 0000                              _RCIF 0065  
                            _TRMT 04C1                     __CFG_FCMEN$ON 0000                              _main 06A3  
                            btemp 007E  __size_of_uart_write_unsigned_int 001E                     __CFG_BOREN$ON 0000  
                            ltemp 007E                              start 0001                              ttemp 007E  
                            wtemp 007E                     __CFG_MCLRE$ON 0000                    get_analog@port 0075  
        __size_of_uart_write_char 000A                             ?_main 0071                     __CFG_WDTE$OFF 0000  
                           _ANSEL 0091                             _RCREG 001A                             _SPBRG 0099  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _TRISD 0088                             _TRISE 0089                             _TXREG 0019  
                           _TXSTA 0098                             pclath 000A                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                           ttemp0 007E                             ttemp1 0081                             ttemp2 0084  
                           ttemp3 0087                             ttemp4 007F                             status 0003  
                           wtemp0 007E                             wtemp1 0080                             wtemp2 0082  
                           wtemp3 0084                             wtemp4 0086                             wtemp5 0088  
                           wtemp6 007F              __size_of_analog_init 003A                   __initialization 07F0  
                    __end_of_main 06C3                            ??_main 0051                            _ADCON1 009F  
             get_hall_state@hallA 004B               get_hall_state@hallB 004D               get_hall_state@hallC 004F  
                ??_get_hall_state 0079                            _ADRESH 001E                            _ADRESL 009E  
             get_hall_state@state 0049                    __CFG_PWRTE$OFF 0000                  __end_of_init_pin 0642  
               ??_uart_write_char 0071       __size_of_uart_write_voltage 001F           _uart_write_unsigned_int 0666  
         __end_of__initialization 07FC                    __pcstackCOMMON 0071                      __pidataBANK0 06EB  
                get_analog@output 0049                __size_of_init_hall 000A                __size_of_init_uart 000D  
              __size_of_read_hall 0028                        __pmaintext 06A3         uart_write_direction@F2949 0035  
                      _get_analog 0714                __size_of_setup_mcu 0013         ??_uart_write_unsigned_int 0073  
                       ?_init_pin 0071                        _init_state 0054                           __ptext1 0684  
                         __ptext2 0666                           __ptext3 060F                           __ptext4 0714  
                         __ptext5 0741                           __ptext6 0653                           __ptext7 0626  
                         __ptext8 0619                           __ptext9 0633                 __end_of_init_hall 060F  
               __end_of_init_uart 0626                 __end_of_read_hall 06EB              end_of_initialization 07FC  
                   ??_analog_init 0073                        ??_init_pin 0071                 __end_of_setup_mcu 0666  
                       _RCSTAbits 0018   __end_of_uart_write_unsigned_int 0684                   _uart_write_char 060F  
                       _PORTCbits 0007                         _PORTDbits 0008                         _PORTEbits 0009  
                      _setup_port 0626                       ?_get_analog 0075               __end_of_analog_init 077B  
          uart_write_voltage@port 004B        __end_of_uart_write_voltage 06A3               start_initialization 07F0  
             uart_write_char@data 0071           __end_of_uart_write_char 0619           __size_of_get_hall_state 0075  
             __size_of_get_analog 002D                        init_fetch0 0642                       __pdataBANK0 0020  
                     ?_setup_port 0071                         ___latbits 0002                     __pcstackBANK0 0049  
                     _analog_init 0741                         __pnvBANK0 0054                 __size_of_init_pin 000F  
                 read_hall@hall_A 0076                   read_hall@hall_B 0071                   read_hall@hall_C 0072  
    uart_write_unsigned_int@char1 0075      uart_write_unsigned_int@char2 0076                         _init_hall 0605  
                       _init_uart 0619                         _read_hall 06C3               __size_of_setup_port 000D  
                ?_uart_write_char 0071                         _setup_mcu 0653                        _ADCON0bits 001F  
                    ??_get_analog 0077          ?_uart_write_unsigned_int 0071                        ?_init_hall 0071  
                      ?_init_uart 0071                        ?_read_hall 0071                    _get_hall_state 077B  
              __end_of_get_analog 0741                        ?_setup_mcu 0071                          __ptext10 0605  
                        __ptext11 077B                          __ptext12 06C3            analog_init@analog_port 0071  
              _uart_write_voltage 0684                     __size_of_main 0020                          _init_pin 0633  
          __end_of_get_hall_state 07F0               ?_uart_write_voltage 004B                      ??_setup_port 0071  
      uart_write_hall_state@F2945 0020              ??_uart_write_voltage 007D                          init_ram0 0646  
                     ??_init_hall 007B                       ??_init_uart 0071                       ??_read_hall 0073  
                    ?_analog_init 0071                   ?_get_hall_state 0077                __end_of_setup_port 0633  
       uart_write_voltage@voltage 004D                       ??_setup_mcu 007B     uart_write_unsigned_int@number 0071  
