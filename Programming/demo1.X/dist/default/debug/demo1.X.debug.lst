

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jul 17 23:28:53 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F917
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0095                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  009F                     	;# 
    78  0105                     	;# 
    79  0107                     	;# 
    80  0108                     	;# 
    81  0109                     	;# 
    82  010C                     	;# 
    83  010C                     	;# 
    84  010D                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0110                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0113                     	;# 
    92  0114                     	;# 
    93  0115                     	;# 
    94  0116                     	;# 
    95  0117                     	;# 
    96  0118                     	;# 
    97  0119                     	;# 
    98  011A                     	;# 
    99  011B                     	;# 
   100  011C                     	;# 
   101  011D                     	;# 
   102  011E                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0095                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  0105                     	;# 
   167  0107                     	;# 
   168  0108                     	;# 
   169  0109                     	;# 
   170  010C                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011B                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0008                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0088                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0095                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  0105                     	;# 
   255  0107                     	;# 
   256  0108                     	;# 
   257  0109                     	;# 
   258  010C                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  0110                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011C                     	;# 
   277  011D                     	;# 
   278  011E                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0094                     	;# 
   331  0095                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009E                     	;# 
   341  009F                     	;# 
   342  0105                     	;# 
   343  0107                     	;# 
   344  0108                     	;# 
   345  0109                     	;# 
   346  010C                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  0110                     	;# 
   353  0111                     	;# 
   354  0112                     	;# 
   355  0113                     	;# 
   356  0114                     	;# 
   357  0115                     	;# 
   358  0116                     	;# 
   359  0117                     	;# 
   360  0118                     	;# 
   361  0119                     	;# 
   362  011A                     	;# 
   363  011B                     	;# 
   364  011C                     	;# 
   365  011D                     	;# 
   366  011E                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369                           
   370                           	psect	nvBANK0
   371  0030                     __pnvBANK0:	
   372  0030                     _init_state:	
   373  0030                     	ds	2
   374  0007                     _PORTCbits	set	7
   375  0008                     _PORTDbits	set	8
   376  0009                     _PORTEbits	set	9
   377  0091                     _ANSEL	set	145
   378  0085                     _TRISA	set	133
   379  0086                     _TRISB	set	134
   380  0087                     _TRISC	set	135
   381  0088                     _TRISD	set	136
   382  0089                     _TRISE	set	137
   383                           
   384                           ; #config settings
   385  0000                     
   386                           	psect	cinit
   387  07FC                     start_initialization:	
   388  07FC                     __initialization:	
   389  07FC                     end_of_initialization:	
   390                           ;End of C runtime variable initialization code
   391                           
   392  07FC                     __end_of__initialization:	
   393  07FC  0183               	clrf	3
   394  07FD  120A  118A  2ED3   	ljmp	_main	;jump to C main() function
   395                           
   396                           	psect	cstackCOMMON
   397  0070                     __pcstackCOMMON:	
   398  0070                     ?_setup_mcu:	
   399  0070                     ?_setup_port:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_setup_port:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_init_pin:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ??_init_pin:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_init_hall:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_main:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_read_hall:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     read_hall@hall_B:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	1
   426  0071                     read_hall@hall_C:	
   427                           
   428                           ; 1 bytes @ 0x1
   429  0071                     	ds	1
   430  0072                     ??_read_hall:	
   431                           
   432                           ; 1 bytes @ 0x2
   433  0072                     	ds	3
   434  0075                     read_hall@hall_A:	
   435                           
   436                           ; 1 bytes @ 0x5
   437  0075                     	ds	1
   438  0076                     ?_get_hall_state:	
   439                           
   440                           ; 2 bytes @ 0x6
   441  0076                     	ds	2
   442  0078                     ??_get_hall_state:	
   443                           
   444                           ; 1 bytes @ 0x8
   445  0078                     	ds	2
   446  007A                     ??_setup_mcu:	
   447  007A                     ??_get_direction:	
   448                           ; 1 bytes @ 0xA
   449                           
   450  007A                     ??_init_hall:	
   451                           ; 1 bytes @ 0xA
   452                           
   453                           
   454                           ; 1 bytes @ 0xA
   455  007A                     	ds	3
   456  007D                     ??_main:	
   457                           
   458                           	psect	cstackBANK0
   459  0020                     __pcstackBANK0:	
   460                           ; 1 bytes @ 0xD
   461                           
   462  0020                     get_hall_state@state:	
   463                           
   464                           ; 2 bytes @ 0x0
   465  0020                     	ds	2
   466  0022                     get_hall_state@hallA:	
   467                           
   468                           ; 2 bytes @ 0x2
   469  0022                     	ds	2
   470  0024                     get_hall_state@hallB:	
   471                           
   472                           ; 2 bytes @ 0x4
   473  0024                     	ds	2
   474  0026                     get_hall_state@hallC:	
   475                           
   476                           ; 2 bytes @ 0x6
   477  0026                     	ds	2
   478  0028                     ?_get_direction:	
   479                           
   480                           ; 2 bytes @ 0x8
   481  0028                     	ds	2
   482  002A                     get_direction@direction:	
   483                           
   484                           ; 2 bytes @ 0xA
   485  002A                     	ds	2
   486  002C                     get_direction@current_state:	
   487                           
   488                           ; 2 bytes @ 0xC
   489  002C                     	ds	2
   490  002E                     main@d:	
   491                           
   492                           ; 2 bytes @ 0xE
   493  002E                     	ds	2
   494                           
   495                           	psect	maintext
   496  06D3                     __pmaintext:	
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   499 ;;
   500 ;; *************** function _main *****************
   501 ;; Defined at:
   502 ;;		line 9 in file "main.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  d               2   14[BANK0 ] int 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : B00/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         0       2       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         0       2       0       0       0
   520 ;;Total ram usage:        2 bytes
   521 ;; Hardware stack levels required when called:    4
   522 ;; This function calls:
   523 ;;		_get_direction
   524 ;;		_setup_mcu
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           
   531                           ;psect for function _main
   532  06D3                     _main:	
   533                           
   534                           ;main.c: 11: setup_mcu();
   535                           
   536                           ;incstack = 0
   537                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   538  06D3  120A  118A  26B6  120A  118A  	fcall	_setup_mcu
   539  06D8                     l7:	
   540                           ;main.c: 13: while(1)
   541                           
   542                           
   543                           ;main.c: 14: {
   544                           ;main.c: 15: int d = get_direction();
   545  06D8  120A  118A  2781  120A  118A  	fcall	_get_direction
   546  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   547  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   548  06DF  0829               	movf	?_get_direction+1,w
   549  06E0  00AF               	movwf	main@d+1
   550  06E1  0828               	movf	?_get_direction,w
   551  06E2  00AE               	movwf	main@d
   552  06E3  2ED8               	goto	l7
   553  06E4                     __end_of_main:	
   554                           ;main.c: 16: }
   555                           ;main.c: 17: return;
   556                           
   557                           
   558                           	psect	text1
   559  06B6                     __ptext1:	
   560 ;; *************** function _setup_mcu *****************
   561 ;; Defined at:
   562 ;;		line 9 in file "micro_setup.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    3
   583 ;; This function calls:
   584 ;;		_init_hall
   585 ;;		_init_pin
   586 ;;		_setup_port
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function _setup_mcu
   594  06B6                     _setup_mcu:	
   595                           
   596                           ;micro_setup.c: 11: setup_port();
   597                           
   598                           ;incstack = 0
   599                           ; Regs used in _setup_mcu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   600  06B6  120A  118A  26A9  120A  118A  	fcall	_setup_port
   601                           
   602                           ;micro_setup.c: 12: init_pin();
   603  06BB  120A  118A  26C4  120A  118A  	fcall	_init_pin
   604                           
   605                           ;micro_setup.c: 13: init_hall();
   606  06C0  120A  118A  269F   	fcall	_init_hall
   607  06C3  0008               	return
   608  06C4                     __end_of_setup_mcu:	
   609                           
   610                           	psect	text2
   611  06A9                     __ptext2:	
   612 ;; *************** function _setup_port *****************
   613 ;; Defined at:
   614 ;;		line 16 in file "micro_setup.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_setup_mcu
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _setup_port
   643  06A9                     _setup_port:	
   644                           
   645                           ;micro_setup.c: 18: TRISA = 0b10001111;
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _setup_port: [wreg+status,2]
   649  06A9  308F               	movlw	143
   650  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   651  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   652  06AC  0085               	movwf	5	;volatile
   653                           
   654                           ;micro_setup.c: 19: TRISB = 0b00000000;
   655  06AD  0186               	clrf	6	;volatile
   656                           
   657                           ;micro_setup.c: 20: TRISC = 0b10000000;
   658  06AE  3080               	movlw	128
   659  06AF  0087               	movwf	7	;volatile
   660                           
   661                           ;micro_setup.c: 21: TRISD = 0b00000000;
   662  06B0  0188               	clrf	8	;volatile
   663                           
   664                           ;micro_setup.c: 22: TRISE = 0b00000111;
   665  06B1  3007               	movlw	7
   666  06B2  0089               	movwf	9	;volatile
   667                           
   668                           ;micro_setup.c: 24: ANSEL = 0b00001111;
   669  06B3  300F               	movlw	15
   670  06B4  0091               	movwf	17	;volatile
   671  06B5  0008               	return
   672  06B6                     __end_of_setup_port:	
   673                           
   674                           	psect	text3
   675  06C4                     __ptext3:	
   676 ;; *************** function _init_pin *****************
   677 ;; Defined at:
   678 ;;		line 30 in file "micro_setup.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		None
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_setup_mcu
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _init_pin
   707  06C4                     _init_pin:	
   708                           
   709                           ;micro_setup.c: 32: PORTCbits.RC0 = (0);
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _init_pin: []
   713  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   714  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   715  06C6  1007               	bcf	7,0	;volatile
   716                           
   717                           ;micro_setup.c: 33: PORTCbits.RC1 = (0);
   718  06C7  1087               	bcf	7,1	;volatile
   719                           
   720                           ;micro_setup.c: 34: PORTCbits.RC2 = (0);
   721  06C8  1107               	bcf	7,2	;volatile
   722                           
   723                           ;micro_setup.c: 35: PORTCbits.RC3 = (0);
   724  06C9  1187               	bcf	7,3	;volatile
   725                           
   726                           ;micro_setup.c: 36: PORTCbits.RC4 = (0);
   727  06CA  1207               	bcf	7,4	;volatile
   728                           
   729                           ;micro_setup.c: 37: PORTCbits.RC5 = (0);
   730  06CB  1287               	bcf	7,5	;volatile
   731                           
   732                           ;micro_setup.c: 39: PORTDbits.RD0 = (0);
   733  06CC  1008               	bcf	8,0	;volatile
   734                           
   735                           ;micro_setup.c: 40: PORTDbits.RD1 = (0);
   736  06CD  1088               	bcf	8,1	;volatile
   737                           
   738                           ;micro_setup.c: 41: PORTDbits.RD2 = (0);
   739  06CE  1108               	bcf	8,2	;volatile
   740                           
   741                           ;micro_setup.c: 42: PORTDbits.RD3 = (0);
   742  06CF  1188               	bcf	8,3	;volatile
   743                           
   744                           ;micro_setup.c: 43: PORTDbits.RD4 = (0);
   745  06D0  1208               	bcf	8,4	;volatile
   746                           
   747                           ;micro_setup.c: 44: PORTDbits.RD5 = (0);
   748  06D1  1288               	bcf	8,5	;volatile
   749  06D2  0008               	return
   750  06D3                     __end_of_init_pin:	
   751                           
   752                           	psect	text4
   753  069F                     __ptext4:	
   754 ;; *************** function _init_hall *****************
   755 ;; Defined at:
   756 ;;		line 47 in file "micro_setup.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0
   773 ;;      Totals:         0       0       0       0       0
   774 ;;Total ram usage:        0 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    2
   777 ;; This function calls:
   778 ;;		_get_hall_state
   779 ;; This function is called by:
   780 ;;		_setup_mcu
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _init_hall
   786  069F                     _init_hall:	
   787                           
   788                           ;micro_setup.c: 49: init_state = get_hall_state();
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _init_hall: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   792  069F  120A  118A  270C   	fcall	_get_hall_state
   793  06A2  0877               	movf	?_get_hall_state+1,w
   794  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   795  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   796  06A5  00B1               	movwf	_init_state+1
   797  06A6  0876               	movf	?_get_hall_state,w
   798  06A7  00B0               	movwf	_init_state
   799  06A8  0008               	return
   800  06A9                     __end_of_init_hall:	
   801                           
   802                           	psect	text5
   803  0781                     __ptext5:	
   804 ;; *************** function _get_direction *****************
   805 ;; Defined at:
   806 ;;		line 49 in file "hall_effect.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  current_stat    2   12[BANK0 ] int 
   811 ;;  direction       2   10[BANK0 ] int 
   812 ;; Return value:  Size  Location     Type
   813 ;;                  2    8[BANK0 ] int 
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       2       0       0       0
   822 ;;      Locals:         0       4       0       0       0
   823 ;;      Temps:          3       0       0       0       0
   824 ;;      Totals:         3       6       0       0       0
   825 ;;Total ram usage:        9 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    2
   828 ;; This function calls:
   829 ;;		_get_hall_state
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _get_direction
   837  0781                     _get_direction:	
   838                           
   839                           ;hall_effect.c: 51: int direction;
   840                           ;hall_effect.c: 52: int current_state = get_hall_state();
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in _get_direction: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   844  0781  120A  118A  270C  120A  118A  	fcall	_get_hall_state
   845  0786  0877               	movf	?_get_hall_state+1,w
   846  0787  1283               	bcf	3,5	;RP0=0, select bank0
   847  0788  1303               	bcf	3,6	;RP1=0, select bank0
   848  0789  00AD               	movwf	get_direction@current_state+1
   849  078A  0876               	movf	?_get_hall_state,w
   850  078B  00AC               	movwf	get_direction@current_state
   851                           
   852                           ;hall_effect.c: 53: if((init_state < current_state) || (init_state == 6 && current_state
      +                           == 1))
   853  078C  0831               	movf	_init_state+1,w
   854  078D  3A80               	xorlw	128
   855  078E  00FA               	movwf	??_get_direction
   856  078F  082D               	movf	get_direction@current_state+1,w
   857  0790  3A80               	xorlw	128
   858  0791  027A               	subwf	??_get_direction,w
   859  0792  1D03               	skipz
   860  0793  2F96               	goto	u635
   861  0794  082C               	movf	get_direction@current_state,w
   862  0795  0230               	subwf	_init_state,w
   863  0796                     u635:	
   864  0796  1C03               	skipc
   865  0797  2FA3               	goto	l905
   866  0798  3006               	movlw	6
   867  0799  1283               	bcf	3,5	;RP0=0, select bank0
   868  079A  1303               	bcf	3,6	;RP1=0, select bank0
   869  079B  0630               	xorwf	_init_state,w
   870  079C  0431               	iorwf	_init_state+1,w
   871  079D  1D03               	btfss	3,2
   872  079E  2FBA               	goto	l913
   873  079F  032C               	decf	get_direction@current_state,w
   874  07A0  042D               	iorwf	get_direction@current_state+1,w
   875  07A1  1D03               	btfss	3,2
   876  07A2  2FBA               	goto	l913
   877  07A3                     l905:	
   878                           
   879                           ;hall_effect.c: 54: {
   880                           ;hall_effect.c: 55: direction = 1;
   881  07A3  3001               	movlw	1
   882  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   883  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   884  07A6  00AA               	movwf	get_direction@direction
   885  07A7  3000               	movlw	0
   886  07A8  00AB               	movwf	get_direction@direction+1
   887                           
   888                           ;hall_effect.c: 56: PORTDbits.RD5 = (1);
   889  07A9  1688               	bsf	8,5	;volatile
   890                           
   891                           ;hall_effect.c: 57: PORTDbits.RD3 = (0);
   892  07AA  1188               	bcf	8,3	;volatile
   893                           
   894                           ;hall_effect.c: 58: PORTDbits.RD1 = (0);
   895  07AB  1088               	bcf	8,1	;volatile
   896                           
   897                           ;hall_effect.c: 59: _delay((unsigned long)((100)*(8000000/4000.0)));
   898  07AC  3002               	movlw	2
   899  07AD  00FC               	movwf	??_get_direction+2
   900  07AE  3004               	movlw	4
   901  07AF  00FB               	movwf	??_get_direction+1
   902  07B0  30BA               	movlw	186
   903  07B1  00FA               	movwf	??_get_direction
   904  07B2                     u697:	
   905  07B2  0BFA               	decfsz	??_get_direction,f
   906  07B3  2FB2               	goto	u697
   907  07B4  0BFB               	decfsz	??_get_direction+1,f
   908  07B5  2FB2               	goto	u697
   909  07B6  0BFC               	decfsz	??_get_direction+2,f
   910  07B7  2FB2               	goto	u697
   911  07B8  0000               	nop
   912                           
   913                           ;hall_effect.c: 60: }
   914  07B9  2FF1               	goto	l935
   915  07BA                     l913:	
   916                           
   917                           ;hall_effect.c: 61: else if((init_state > current_state) || (init_state == 1 && current_
      +                          state == 6))
   918  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   919  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   920  07BC  082D               	movf	get_direction@current_state+1,w
   921  07BD  3A80               	xorlw	128
   922  07BE  00FA               	movwf	??_get_direction
   923  07BF  0831               	movf	_init_state+1,w
   924  07C0  3A80               	xorlw	128
   925  07C1  027A               	subwf	??_get_direction,w
   926  07C2  1D03               	skipz
   927  07C3  2FC6               	goto	u665
   928  07C4  0830               	movf	_init_state,w
   929  07C5  022C               	subwf	get_direction@current_state,w
   930  07C6                     u665:	
   931  07C6  1C03               	skipc
   932  07C7  2FD3               	goto	l919
   933  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   934  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   935  07CA  0330               	decf	_init_state,w
   936  07CB  0431               	iorwf	_init_state+1,w
   937  07CC  1D03               	btfss	3,2
   938  07CD  2FEA               	goto	l927
   939  07CE  3006               	movlw	6
   940  07CF  062C               	xorwf	get_direction@current_state,w
   941  07D0  042D               	iorwf	get_direction@current_state+1,w
   942  07D1  1D03               	btfss	3,2
   943  07D2  2FEA               	goto	l927
   944  07D3                     l919:	
   945                           
   946                           ;hall_effect.c: 62: {
   947                           ;hall_effect.c: 63: direction = 2;
   948  07D3  3002               	movlw	2
   949  07D4  1283               	bcf	3,5	;RP0=0, select bank0
   950  07D5  1303               	bcf	3,6	;RP1=0, select bank0
   951  07D6  00AA               	movwf	get_direction@direction
   952  07D7  3000               	movlw	0
   953  07D8  00AB               	movwf	get_direction@direction+1
   954                           
   955                           ;hall_effect.c: 64: PORTDbits.RD5 = (0);
   956  07D9  1288               	bcf	8,5	;volatile
   957                           
   958                           ;hall_effect.c: 65: PORTDbits.RD3 = (1);
   959  07DA  1588               	bsf	8,3	;volatile
   960                           
   961                           ;hall_effect.c: 66: PORTDbits.RD1 = (0);
   962  07DB  1088               	bcf	8,1	;volatile
   963                           
   964                           ;hall_effect.c: 67: _delay((unsigned long)((100)*(8000000/4000.0)));
   965  07DC  3002               	movlw	2
   966  07DD  00FC               	movwf	??_get_direction+2
   967  07DE  3004               	movlw	4
   968  07DF  00FB               	movwf	??_get_direction+1
   969  07E0  30BA               	movlw	186
   970  07E1  00FA               	movwf	??_get_direction
   971  07E2                     u707:	
   972  07E2  0BFA               	decfsz	??_get_direction,f
   973  07E3  2FE2               	goto	u707
   974  07E4  0BFB               	decfsz	??_get_direction+1,f
   975  07E5  2FE2               	goto	u707
   976  07E6  0BFC               	decfsz	??_get_direction+2,f
   977  07E7  2FE2               	goto	u707
   978  07E8  0000               	nop
   979                           
   980                           ;hall_effect.c: 68: }
   981  07E9  2FF1               	goto	l935
   982  07EA                     l927:	
   983                           
   984                           ;hall_effect.c: 69: else
   985                           ;hall_effect.c: 70: {
   986                           ;hall_effect.c: 71: direction = 0;
   987  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   988  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   989  07EC  01AA               	clrf	get_direction@direction
   990  07ED  01AB               	clrf	get_direction@direction+1
   991                           
   992                           ;hall_effect.c: 72: PORTDbits.RD5 = (0);
   993  07EE  1288               	bcf	8,5	;volatile
   994                           
   995                           ;hall_effect.c: 73: PORTDbits.RD3 = (0);
   996  07EF  1188               	bcf	8,3	;volatile
   997                           
   998                           ;hall_effect.c: 74: PORTDbits.RD1 = (0);
   999  07F0  1088               	bcf	8,1	;volatile
  1000  07F1                     l935:	
  1001                           
  1002                           ;hall_effect.c: 75: }
  1003                           ;hall_effect.c: 76: init_state = current_state;
  1004  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1005  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1006  07F3  082D               	movf	get_direction@current_state+1,w
  1007  07F4  00B1               	movwf	_init_state+1
  1008  07F5  082C               	movf	get_direction@current_state,w
  1009  07F6  00B0               	movwf	_init_state
  1010                           
  1011                           ;hall_effect.c: 77: return direction;
  1012  07F7  082B               	movf	get_direction@direction+1,w
  1013  07F8  00A9               	movwf	?_get_direction+1
  1014  07F9  082A               	movf	get_direction@direction,w
  1015  07FA  00A8               	movwf	?_get_direction
  1016  07FB  0008               	return
  1017  07FC                     __end_of_get_direction:	
  1018                           
  1019                           	psect	text6
  1020  070C                     __ptext6:	
  1021 ;; *************** function _get_hall_state *****************
  1022 ;; Defined at:
  1023 ;;		line 15 in file "hall_effect.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  hallC           2    6[BANK0 ] int 
  1028 ;;  hallB           2    4[BANK0 ] int 
  1029 ;;  hallA           2    2[BANK0 ] int 
  1030 ;;  state           2    0[BANK0 ] int 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2    6[COMMON] int 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         2       0       0       0       0
  1041 ;;      Locals:         0       8       0       0       0
  1042 ;;      Temps:          2       0       0       0       0
  1043 ;;      Totals:         4       8       0       0       0
  1044 ;;Total ram usage:       12 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    1
  1047 ;; This function calls:
  1048 ;;		_read_hall
  1049 ;; This function is called by:
  1050 ;;		_init_hall
  1051 ;;		_get_direction
  1052 ;;		_hall_LED_state
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _get_hall_state
  1058  070C                     _get_hall_state:	
  1059                           
  1060                           ;hall_effect.c: 17: int hallA;
  1061                           ;hall_effect.c: 18: int hallB;
  1062                           ;hall_effect.c: 19: int hallC;
  1063                           ;hall_effect.c: 20: int state;
  1064                           ;hall_effect.c: 21: read_hall(&hallA, &hallB, &hallC);
  1065                           
  1066                           ;incstack = 0
  1067                           ; Regs used in _get_hall_state: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1068  070C  3024               	movlw	(low (get_hall_state@hallB| 0))& (0+255)
  1069  070D  00F8               	movwf	??_get_hall_state
  1070  070E  0878               	movf	??_get_hall_state,w
  1071  070F  00F0               	movwf	read_hall@hall_B
  1072  0710  3026               	movlw	(low (get_hall_state@hallC| 0))& (0+255)
  1073  0711  00F9               	movwf	??_get_hall_state+1
  1074  0712  0879               	movf	??_get_hall_state+1,w
  1075  0713  00F1               	movwf	read_hall@hall_C
  1076  0714  3022               	movlw	(low (get_hall_state@hallA| 0))& (0+255)
  1077  0715  120A  118A  26E4  120A  118A  	fcall	_read_hall
  1078                           
  1079                           ;hall_effect.c: 22: if(hallA && !hallB && !hallC)
  1080  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1081  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1082  071C  0822               	movf	get_hall_state@hallA,w
  1083  071D  0423               	iorwf	get_hall_state@hallA+1,w
  1084  071E  1903               	btfsc	3,2
  1085  071F  2F2C               	goto	l835
  1086  0720  0824               	movf	get_hall_state@hallB,w
  1087  0721  0425               	iorwf	get_hall_state@hallB+1,w
  1088  0722  1D03               	btfss	3,2
  1089  0723  2F2C               	goto	l835
  1090  0724  0826               	movf	get_hall_state@hallC,w
  1091  0725  0427               	iorwf	get_hall_state@hallC+1,w
  1092  0726  1D03               	btfss	3,2
  1093  0727  2F2C               	goto	l835
  1094                           
  1095                           ;hall_effect.c: 23: {
  1096                           ;hall_effect.c: 24: state = 1;
  1097  0728  3001               	movlw	1
  1098  0729  00A0               	movwf	get_hall_state@state
  1099  072A  3000               	movlw	0
  1100  072B  00A1               	movwf	get_hall_state@state+1
  1101  072C                     l835:	
  1102                           
  1103                           ;hall_effect.c: 25: }
  1104                           ;hall_effect.c: 26: if(hallA && hallB && !hallC)
  1105  072C  0822               	movf	get_hall_state@hallA,w
  1106  072D  0423               	iorwf	get_hall_state@hallA+1,w
  1107  072E  1903               	btfsc	3,2
  1108  072F  2F3C               	goto	l843
  1109  0730  0824               	movf	get_hall_state@hallB,w
  1110  0731  0425               	iorwf	get_hall_state@hallB+1,w
  1111  0732  1903               	btfsc	3,2
  1112  0733  2F3C               	goto	l843
  1113  0734  0826               	movf	get_hall_state@hallC,w
  1114  0735  0427               	iorwf	get_hall_state@hallC+1,w
  1115  0736  1D03               	btfss	3,2
  1116  0737  2F3C               	goto	l843
  1117                           
  1118                           ;hall_effect.c: 27: {
  1119                           ;hall_effect.c: 28: state = 2;
  1120  0738  3002               	movlw	2
  1121  0739  00A0               	movwf	get_hall_state@state
  1122  073A  3000               	movlw	0
  1123  073B  00A1               	movwf	get_hall_state@state+1
  1124  073C                     l843:	
  1125                           
  1126                           ;hall_effect.c: 29: }
  1127                           ;hall_effect.c: 30: if(!hallA && hallB && !hallC)
  1128  073C  0822               	movf	get_hall_state@hallA,w
  1129  073D  0423               	iorwf	get_hall_state@hallA+1,w
  1130  073E  1D03               	btfss	3,2
  1131  073F  2F4C               	goto	l851
  1132  0740  0824               	movf	get_hall_state@hallB,w
  1133  0741  0425               	iorwf	get_hall_state@hallB+1,w
  1134  0742  1903               	btfsc	3,2
  1135  0743  2F4C               	goto	l851
  1136  0744  0826               	movf	get_hall_state@hallC,w
  1137  0745  0427               	iorwf	get_hall_state@hallC+1,w
  1138  0746  1D03               	btfss	3,2
  1139  0747  2F4C               	goto	l851
  1140                           
  1141                           ;hall_effect.c: 31: {
  1142                           ;hall_effect.c: 32: state = 3;
  1143  0748  3003               	movlw	3
  1144  0749  00A0               	movwf	get_hall_state@state
  1145  074A  3000               	movlw	0
  1146  074B  00A1               	movwf	get_hall_state@state+1
  1147  074C                     l851:	
  1148                           
  1149                           ;hall_effect.c: 33: }
  1150                           ;hall_effect.c: 34: if(!hallA && hallB && hallC)
  1151  074C  0822               	movf	get_hall_state@hallA,w
  1152  074D  0423               	iorwf	get_hall_state@hallA+1,w
  1153  074E  1D03               	btfss	3,2
  1154  074F  2F5C               	goto	l859
  1155  0750  0824               	movf	get_hall_state@hallB,w
  1156  0751  0425               	iorwf	get_hall_state@hallB+1,w
  1157  0752  1903               	btfsc	3,2
  1158  0753  2F5C               	goto	l859
  1159  0754  0826               	movf	get_hall_state@hallC,w
  1160  0755  0427               	iorwf	get_hall_state@hallC+1,w
  1161  0756  1903               	btfsc	3,2
  1162  0757  2F5C               	goto	l859
  1163                           
  1164                           ;hall_effect.c: 35: {
  1165                           ;hall_effect.c: 36: state = 4;
  1166  0758  3004               	movlw	4
  1167  0759  00A0               	movwf	get_hall_state@state
  1168  075A  3000               	movlw	0
  1169  075B  00A1               	movwf	get_hall_state@state+1
  1170  075C                     l859:	
  1171                           
  1172                           ;hall_effect.c: 37: }
  1173                           ;hall_effect.c: 38: if(!hallA && !hallB && hallC)
  1174  075C  0822               	movf	get_hall_state@hallA,w
  1175  075D  0423               	iorwf	get_hall_state@hallA+1,w
  1176  075E  1D03               	btfss	3,2
  1177  075F  2F6C               	goto	l867
  1178  0760  0824               	movf	get_hall_state@hallB,w
  1179  0761  0425               	iorwf	get_hall_state@hallB+1,w
  1180  0762  1D03               	btfss	3,2
  1181  0763  2F6C               	goto	l867
  1182  0764  0826               	movf	get_hall_state@hallC,w
  1183  0765  0427               	iorwf	get_hall_state@hallC+1,w
  1184  0766  1903               	btfsc	3,2
  1185  0767  2F6C               	goto	l867
  1186                           
  1187                           ;hall_effect.c: 39: {
  1188                           ;hall_effect.c: 40: state = 5;
  1189  0768  3005               	movlw	5
  1190  0769  00A0               	movwf	get_hall_state@state
  1191  076A  3000               	movlw	0
  1192  076B  00A1               	movwf	get_hall_state@state+1
  1193  076C                     l867:	
  1194                           
  1195                           ;hall_effect.c: 41: }
  1196                           ;hall_effect.c: 42: if(hallA && !hallB && hallC)
  1197  076C  0822               	movf	get_hall_state@hallA,w
  1198  076D  0423               	iorwf	get_hall_state@hallA+1,w
  1199  076E  1903               	btfsc	3,2
  1200  076F  2F7C               	goto	l137
  1201  0770  0824               	movf	get_hall_state@hallB,w
  1202  0771  0425               	iorwf	get_hall_state@hallB+1,w
  1203  0772  1D03               	btfss	3,2
  1204  0773  2F7C               	goto	l137
  1205  0774  0826               	movf	get_hall_state@hallC,w
  1206  0775  0427               	iorwf	get_hall_state@hallC+1,w
  1207  0776  1903               	btfsc	3,2
  1208  0777  2F7C               	goto	l137
  1209                           
  1210                           ;hall_effect.c: 43: {
  1211                           ;hall_effect.c: 44: state = 6;
  1212  0778  3006               	movlw	6
  1213  0779  00A0               	movwf	get_hall_state@state
  1214  077A  3000               	movlw	0
  1215  077B  00A1               	movwf	get_hall_state@state+1
  1216  077C                     l137:	
  1217                           
  1218                           ;hall_effect.c: 45: }
  1219                           ;hall_effect.c: 46: return state;
  1220  077C  0821               	movf	get_hall_state@state+1,w
  1221  077D  00F7               	movwf	?_get_hall_state+1
  1222  077E  0820               	movf	get_hall_state@state,w
  1223  077F  00F6               	movwf	?_get_hall_state
  1224  0780  0008               	return
  1225  0781                     __end_of_get_hall_state:	
  1226                           
  1227                           	psect	text7
  1228  06E4                     __ptext7:	
  1229 ;; *************** function _read_hall *****************
  1230 ;; Defined at:
  1231 ;;		line 8 in file "hall_effect.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  hall_A          1    wreg     PTR int 
  1234 ;;		 -> get_hall_state@hallA(2), 
  1235 ;;  hall_B          1    0[COMMON] PTR int 
  1236 ;;		 -> get_hall_state@hallB(2), 
  1237 ;;  hall_C          1    1[COMMON] PTR int 
  1238 ;;		 -> get_hall_state@hallC(2), 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  hall_A          1    5[COMMON] PTR int 
  1241 ;;		 -> get_hall_state@hallA(2), 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         2       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0
  1253 ;;      Temps:          3       0       0       0       0
  1254 ;;      Totals:         6       0       0       0       0
  1255 ;;Total ram usage:        6 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_get_hall_state
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _read_hall
  1266  06E4                     _read_hall:	
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _read_hall: [wreg-fsr0h+status,2+status,0]
  1270                           ;read_hall@hall_A stored from wreg
  1271  06E4  00F5               	movwf	read_hall@hall_A
  1272                           
  1273                           ;hall_effect.c: 10: *hall_A = PORTEbits.RE2;
  1274  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06E7  0C09               	rrf	9,w	;volatile
  1277  06E8  00F2               	movwf	??_read_hall
  1278  06E9  0C72               	rrf	??_read_hall,w
  1279  06EA  3901               	andlw	1
  1280  06EB  00F3               	movwf	??_read_hall+1
  1281  06EC  01F4               	clrf	??_read_hall+2
  1282  06ED  0875               	movf	read_hall@hall_A,w
  1283  06EE  0084               	movwf	4
  1284  06EF  0873               	movf	??_read_hall+1,w
  1285  06F0  1383               	bcf	3,7	;select IRP bank0
  1286  06F1  0080               	movwf	0
  1287  06F2  0A84               	incf	4,f
  1288  06F3  0874               	movf	??_read_hall+2,w
  1289  06F4  0080               	movwf	0
  1290                           
  1291                           ;hall_effect.c: 11: *hall_B = PORTEbits.RE1;
  1292  06F5  0C09               	rrf	9,w	;volatile
  1293  06F6  3901               	andlw	1
  1294  06F7  00F2               	movwf	??_read_hall
  1295  06F8  01F3               	clrf	??_read_hall+1
  1296  06F9  0870               	movf	read_hall@hall_B,w
  1297  06FA  0084               	movwf	4
  1298  06FB  0872               	movf	??_read_hall,w
  1299  06FC  0080               	movwf	0
  1300  06FD  0A84               	incf	4,f
  1301  06FE  0873               	movf	??_read_hall+1,w
  1302  06FF  0080               	movwf	0
  1303                           
  1304                           ;hall_effect.c: 12: *hall_C = PORTEbits.RE0;
  1305  0700  0809               	movf	9,w	;volatile
  1306  0701  3901               	andlw	1
  1307  0702  00F2               	movwf	??_read_hall
  1308  0703  01F3               	clrf	??_read_hall+1
  1309  0704  0871               	movf	read_hall@hall_C,w
  1310  0705  0084               	movwf	4
  1311  0706  0872               	movf	??_read_hall,w
  1312  0707  0080               	movwf	0
  1313  0708  0A84               	incf	4,f
  1314  0709  0873               	movf	??_read_hall+1,w
  1315  070A  0080               	movwf	0
  1316  070B  0008               	return
  1317  070C                     __end_of_read_hall:	
  1318  007E                     btemp	set	126	;btemp
  1319  007E                     wtemp	set	126
  1320  007E                     wtemp0	set	126
  1321  0080                     wtemp1	set	128
  1322  0082                     wtemp2	set	130
  1323  0084                     wtemp3	set	132
  1324  0086                     wtemp4	set	134
  1325  0088                     wtemp5	set	136
  1326  007F                     wtemp6	set	127
  1327  007E                     ttemp	set	126
  1328  007E                     ttemp0	set	126
  1329  0081                     ttemp1	set	129
  1330  0084                     ttemp2	set	132
  1331  0087                     ttemp3	set	135
  1332  007F                     ttemp4	set	127
  1333  007E                     ltemp	set	126
  1334  007E                     ltemp0	set	126
  1335  0082                     ltemp1	set	130
  1336  0086                     ltemp2	set	134
  1337  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     16      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            80      0       0

Pointer List with Targets:

    read_hall@hall_C	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallC(BANK0[2]), 

    read_hall@hall_B	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallB(BANK0[2]), 

    read_hall@hall_A	PTR int  size(1) Largest target is 2
		 -> get_hall_state@hallA(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_get_direction
    _init_hall->_get_hall_state
    _get_direction->_get_hall_state
    _get_hall_state->_read_hall

Critical Paths under _main in BANK0

    _main->_get_direction
    _init_hall->_get_hall_state
    _get_direction->_get_hall_state

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1527
                                             14 BANK0      2     2      0
                      _get_direction
                          _setup_mcu
 ---------------------------------------------------------------------------------
 (1) _setup_mcu                                            0     0      0     695
                          _init_hall
                           _init_pin
                         _setup_port
 ---------------------------------------------------------------------------------
 (2) _setup_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pin                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_hall                                            0     0      0     695
                     _get_hall_state
 ---------------------------------------------------------------------------------
 (1) _get_direction                                        9     7      2     831
                                             10 COMMON     3     3      0
                                              8 BANK0      6     4      2
                     _get_hall_state
 ---------------------------------------------------------------------------------
 (3) _get_hall_state                                      12    10      2     695
                                              6 COMMON     4     2      2
                                              0 BANK0      8     8      0
                          _read_hall
 ---------------------------------------------------------------------------------
 (4) _read_hall                                            6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_direction
     _get_hall_state
       _read_hall
   _setup_mcu
     _init_hall
       _get_hall_state
         _read_hall
     _init_pin
     _setup_port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     10      12       4       22.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK3            60      0       0       7        0.0%
BANK3               60      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
ABS                  0      0      1F      10        0.0%
BITBANK2            50      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jul 17 23:28:53 2016

                         l7 06D8                 __CFG_CP$OFF 0000                         l137 077C  
                       l913 07BA                         l905 07A3                         l851 074C  
                       l843 073C                         l835 072C                         l927 07EA  
                       l919 07D3                         l935 07F1                         l867 076C  
                       l859 075C                __CFG_CPD$OFF 0000                         u707 07E2  
                       u635 0796                         u665 07C6                         u697 07B2  
                       fsr0 0004                         indf 0000                __CFG_IESO$ON 0000  
              __CFG_FOSC$HS 0000               __CFG_DEBUG$ON 0000               __CFG_FCMEN$ON 0000  
                      _main 06D3                        btemp 007E               __CFG_BOREN$ON 0000  
                      ltemp 007E                        start 0000                        ttemp 007E  
                      wtemp 007E               __CFG_MCLRE$ON 0000                       ?_main 0070  
             __CFG_WDTE$OFF 0000                       _ANSEL 0091             ??_get_direction 007A  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       main@d 002E  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F             __initialization 07FC  
              __end_of_main 06E4                      ??_main 007D         get_hall_state@hallA 0022  
       get_hall_state@hallB 0024         get_hall_state@hallC 0026            ??_get_hall_state 0078  
       get_hall_state@state 0020              __CFG_PWRTE$OFF 0000            __end_of_init_pin 06D3  
   __end_of__initialization 07FC              __pcstackCOMMON 0070          __size_of_init_hall 000A  
        __size_of_read_hall 0028                  __pmaintext 06D3          __size_of_setup_mcu 000E  
                 ?_init_pin 0070                  _init_state 0030                     __ptext1 06B6  
                   __ptext2 06A9                     __ptext3 06C4                     __ptext4 069F  
                   __ptext5 0781                     __ptext6 070C                     __ptext7 06E4  
         __end_of_init_hall 06A9           __end_of_read_hall 070C       __end_of_get_direction 07FC  
      end_of_initialization 07FC                  ??_init_pin 0070           __end_of_setup_mcu 06C4  
                 _PORTCbits 0007                   _PORTDbits 0008                   _PORTEbits 0009  
                _setup_port 06A9         start_initialization 07FC     __size_of_get_hall_state 0075  
               ?_setup_port 0070                   ___latbits 0002               __pcstackBANK0 0020  
                 __pnvBANK0 0030           __size_of_init_pin 000F             read_hall@hall_A 0075  
           read_hall@hall_B 0070             read_hall@hall_C 0071                   _init_hall 069F  
                 _read_hall 06E4         __size_of_setup_port 000D                   _setup_mcu 06B6  
                ?_init_hall 0070                  ?_read_hall 0070      get_direction@direction 002A  
            _get_hall_state 070C      __size_of_get_direction 007B                  ?_setup_mcu 0070  
             __size_of_main 0011                    _init_pin 06C4      __end_of_get_hall_state 0781  
              ??_setup_port 0070               _get_direction 0781                 ??_init_hall 007A  
               ??_read_hall 0072             ?_get_hall_state 0076          __end_of_setup_port 06B6  
               ??_setup_mcu 007A  get_direction@current_state 002C              ?_get_direction 0028  
