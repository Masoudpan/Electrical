Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\demo1.X.production.sym \
  --cmf=dist/default/production\demo1.X.production.cmf -z -Q16F917 \
  -oC:\Users\INTERN~1\AppData\Local\Temp\s43g.2 \
  -Mdist/default/production/demo1.X.production.map -E1 -ver=XC8 \
  -ASTACK=0190h-01efh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\INTERN~1\AppData\Local\Temp\s43g.obj \
  dist/default/production\demo1.X.production.obj 

Object code version is 3.11

Machine type is 16F917



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\INTERN~1\AppData\Local\Temp\s43g.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\demo1.X.production.obj
                cinit                               7F0      7F0       10      FE0       0
                text12                              6CA      6CA       28      D94       0
                text11                              77B      77B       75      EF6       0
                text10                              610      610        A      C20       0
                text9                               63E      63E        F      C7C       0
                text8                               624      624        D      C48       0
                text7                               631      631        D      C62       0
                text6                               65E      65E       13      CBC       0
                text5                               71B      71B       2D      E36       0
                text4                               748      748       33      E90       0
                text3                               61A      61A        A      C34       0
                text2                               68E      68E       1E      D1C       0
                text1                               671      671       1D      CE2       0
                maintext                            6AC      6AC       1E      D58       0
                cstackBANK0                          49       49        B       20       1
                cstackCOMMON                         70       70        E       70       1
                inittext                            64D      64D       11      C9A       0
                dataBANK0                            20       20       29       20       1
                nvBANK0                              54       54        2       20       1
                idataBANK0                          6F2      6F2       29      DE4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7F0      7F0       10         0
                text12                              6CA      6CA       28         0
                text11                              77B      77B       75         0
                text10                              610      610        A         0
                text9                               63E      63E        F         0
                text8                               624      624        D         0
                text7                               631      631        D         0
                text6                               65E      65E       13         0
                text5                               71B      71B       2D         0
                text4                               748      748       33         0
                text3                               61A      61A        A         0
                text2                               68E      68E       1E         0
                text1                               671      671       1D         0
                maintext                            6AC      6AC       1E         0
                inittext                            64D      64D       11         0
                idataBANK0                          6F2      6F2       29         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          49       49        B         1
                dataBANK0                            20       20       29         1
                nvBANK0                              54       54        2         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                dataBANK0                      000020  000036  000056        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text10                         000610  00000A  00061A       C20       0  CODE        2
                text3                          00061A  00000A  000624       C34       0  CODE        2
                text8                          000624  00000D  000631       C48       0  CODE        2
                text7                          000631  00000D  00063E       C62       0  CODE        2
                text9                          00063E  00000F  00064D       C7C       0  CODE        2
                inittext                       00064D  000011  00065E       C9A       0  CODE        2
                text6                          00065E  000013  000671       CBC       0  CODE        2
                text1                          000671  00001D  00068E       CE2       0  CODE        2
                text2                          00068E  00001E  0006AC       D1C       0  CODE        2
                maintext                       0006AC  00001E  0006CA       D58       0  CODE        2
                text12                         0006CA  000028  0006F2       D94       0  CODE        2
                idataBANK0                     0006F2  000029  00071B       DE4       0  CODE        2
                text5                          00071B  00002D  000748       E36       0  CODE        2
                text4                          000748  000033  00077B       E90       0  CODE        2
                text11                         00077B  000075  0007F0       EF6       0  CODE        2
                cinit                          0007F0  000010  000800       FE0       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0056-006F             1A           1
        BANK1            00A0-00EF             50           1
        BANK2            0120-016F             50           1
        BANK3            0190-01EF             60           1
        CODE             0003-060F            60D           2
                         0800-1FFF            800
        CONST            0003-060F            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-060F            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0056-006F             1A           1
                         00A0-00EF             50
                         0120-016F             50
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-018F             10           1
        STACK            0190-01EF             60           1
        STRCODE          0003-060F            60D           2
                         0800-1FFF           1800
        STRING           0003-060F            100           2
                         0800-1FFF            100

                                  Symbol Table

?_get_analog                      cstackCOMMON 0072
?_get_hall_state                  cstackCOMMON 0076
_ADCON0bits                       (abs)        001F
_ADCON1                           (abs)        009F
_ADRESH                           (abs)        001E
_ADRESL                           (abs)        009E
_ANSEL                            (abs)        0091
_GO_DONE                          (abs)        00F9
_PORTCbits                        (abs)        0007
_PORTDbits                        (abs)        0008
_PORTEbits                        (abs)        0009
_RCIF                             (abs)        0065
_RCREG                            (abs)        001A
_RCSTAbits                        (abs)        0018
_SPBRG                            (abs)        0099
_TRISA                            (abs)        0085
_TRISB                            (abs)        0086
_TRISC                            (abs)        0087
_TRISD                            (abs)        0088
_TRISE                            (abs)        0089
_TRMT                             (abs)        04C1
_TXREG                            (abs)        0019
_TXSTA                            (abs)        0098
__CFG_BOREN$ON                    (abs)        0000
__CFG_CP$OFF                      (abs)        0000
__CFG_CPD$OFF                     (abs)        0000
__CFG_DEBUG$ON                    (abs)        0000
__CFG_FCMEN$ON                    (abs)        0000
__CFG_FOSC$HS                     (abs)        0000
__CFG_IESO$ON                     (abs)        0000
__CFG_MCLRE$ON                    (abs)        0000
__CFG_PWRTE$OFF                   (abs)        0000
__CFG_WDTE$OFF                    (abs)        0000
__Habs1                           abs1         0000
__Hbank0                          bank0        0000
__Hbank1                          bank1        0000
__Hbank2                          bank2        0000
__Hbank3                          bank3        0000
__Hcinit                          cinit        0800
__Hclrtext                        clrtext      0000
__Hcode                           code         0000
__Hcommon                         common       0000
__Hconfig                         config       2008
__HcstackBANK0                    cstackBANK0  0000
__HcstackCOMMON                   cstackCOMMON 0000
__HdataBANK0                      dataBANK0    0000
__Heeprom_data                    eeprom_data  0000
__Hend_init                       end_init     0003
__Hfunctab                        functab      0000
__HidataBANK0                     idataBANK0   0000
__Hidloc                          idloc        0000
__Hinit                           init         0000
__Hinittext                       inittext     0000
__Hintentry                       intentry     0000
__Hmaintext                       maintext     0000
__HnvBANK0                        nvBANK0      0000
__Hpowerup                        powerup      0000
__Hram                            ram          0000
__Hreset_vec                      reset_vec    0000
__Hsfr0                           sfr0         0000
__Hsfr1                           sfr1         0000
__Hsfr2                           sfr2         0000
__Hsfr3                           sfr3         0000
__Hspace_0                        (abs)        2008
__Hspace_1                        (abs)        007E
__Hspace_2                        (abs)        0000
__Hspace_3                        (abs)        0000
__Hstack                          stack        0000
__Hstrings                        strings      0000
__Htext                           text         0000
__Labs1                           abs1         0000
__Lbank0                          bank0        0000
__Lbank1                          bank1        0000
__Lbank2                          bank2        0000
__Lbank3                          bank3        0000
__Lcinit                          cinit        07F0
__Lclrtext                        clrtext      0000
__Lcode                           code         0000
__Lcommon                         common       0000
__Lconfig                         config       2007
__LcstackBANK0                    cstackBANK0  0000
__LcstackCOMMON                   cstackCOMMON 0000
__LdataBANK0                      dataBANK0    0000
__Leeprom_data                    eeprom_data  0000
__Lend_init                       end_init     0000
__Lfunctab                        functab      0000
__LidataBANK0                     idataBANK0   0000
__Lidloc                          idloc        0000
__Linit                           init         0000
__Linittext                       inittext     0000
__Lintentry                       intentry     0000
__Lmaintext                       maintext     0000
__LnvBANK0                        nvBANK0      0000
__Lpowerup                        powerup      0000
__Lram                            ram          0000
__Lreset_vec                      reset_vec    0000
__Lsfr0                           sfr0         0000
__Lsfr1                           sfr1         0000
__Lsfr2                           sfr2         0000
__Lsfr3                           sfr3         0000
__Lspace_0                        (abs)        0000
__Lspace_1                        (abs)        0000
__Lspace_2                        (abs)        0000
__Lspace_3                        (abs)        0000
__Lstack                          stack        0000
__Lstrings                        strings      0000
__Ltext                           text         0000
__S0                              (abs)        2008
__S1                              (abs)        007E
__S2                              (abs)        0000
__S3                              (abs)        0000
___int_sp                         stack        0000
___latbits                        (abs)        0002
___sp                             stack        0000
__end_of__initialization          cinit        07FC
__end_of_analog_init              text5        0748
__end_of_get_analog               text4        077B
__end_of_get_hall_state           text11       07F0
__end_of_init_hall                text10       061A
__end_of_init_pin                 text9        064D
__end_of_init_uart                text8        0631
__end_of_main                     maintext     06CA
__end_of_read_hall                text12       06F2
__end_of_setup_mcu                text6        0671
__end_of_setup_port               text7        063E
__end_of_uart_write_char          text3        0624
__end_of_uart_write_unsigned_int  text2        06AC
__end_of_uart_write_voltage       text1        068E
__initialization                  cinit        07F0
__pcstackBANK0                    cstackBANK0  0049
__pcstackCOMMON                   cstackCOMMON 0070
__pdataBANK0                      dataBANK0    0020
__pidataBANK0                     idataBANK0   06F2
__pmaintext                       maintext     06AC
__pnvBANK0                        nvBANK0      0054
__ptext1                          text1        0671
__ptext10                         text10       0610
__ptext11                         text11       077B
__ptext12                         text12       06CA
__ptext2                          text2        068E
__ptext3                          text3        061A
__ptext4                          text4        0748
__ptext5                          text5        071B
__ptext6                          text6        065E
__ptext7                          text7        0631
__ptext8                          text8        0624
__ptext9                          text9        063E
__size_of_analog_init             (abs)        0000
__size_of_get_analog              (abs)        0000
__size_of_get_hall_state          (abs)        0000
__size_of_init_hall               (abs)        0000
__size_of_init_pin                (abs)        0000
__size_of_init_uart               (abs)        0000
__size_of_main                    (abs)        0000
__size_of_read_hall               (abs)        0000
__size_of_setup_mcu               (abs)        0000
__size_of_setup_port              (abs)        0000
__size_of_uart_write_char         (abs)        0000
__size_of_uart_write_unsigned_int (abs)        0000
__size_of_uart_write_voltage      (abs)        0000
_analog_init                      text5        071B
_get_analog                       text4        0748
_get_hall_state                   text11       077B
_init_hall                        text10       0610
_init_pin                         text9        063E
_init_state                       nvBANK0      0054
_init_uart                        text8        0624
_main                             maintext     06AC
_read_hall                        text12       06CA
_setup_mcu                        text6        065E
_setup_port                       text7        0631
_uart_write_char                  text3        061A
_uart_write_unsigned_int          text2        068E
_uart_write_voltage               text1        0671
analog_init@analog_port           cstackCOMMON 0070
btemp                             (abs)        007E
end_of_initialization             cinit        07FC
get_analog@lsb                    cstackCOMMON 0076
get_analog@msb                    cstackCOMMON 0078
get_analog@output                 cstackCOMMON 007A
get_analog@port                   cstackCOMMON 0072
get_hall_state@hallA              cstackBANK0  004B
get_hall_state@hallB              cstackBANK0  004D
get_hall_state@hallC              cstackBANK0  004F
get_hall_state@state              cstackBANK0  0049
init_fetch0                       inittext     064D
init_ram0                         inittext     0651
intlevel0                         functab      0000
intlevel1                         functab      0000
intlevel2                         functab      0000
intlevel3                         functab      0000
intlevel4                         functab      0000
intlevel5                         functab      0000
ltemp                             (abs)        007E
ltemp0                            (abs)        007E
ltemp1                            (abs)        0082
ltemp2                            (abs)        0086
ltemp3                            (abs)        0080
read_hall@hall_A                  cstackCOMMON 0075
read_hall@hall_B                  cstackCOMMON 0070
read_hall@hall_C                  cstackCOMMON 0071
reset_vec                         reset_vec    0000
stackhi                           (abs)        0000
stacklo                           (abs)        0000
start                             init         0000
start_initialization              cinit        07F0
ttemp                             (abs)        007E
ttemp0                            (abs)        007E
ttemp1                            (abs)        0081
ttemp2                            (abs)        0084
ttemp3                            (abs)        0087
ttemp4                            (abs)        007F
uart_write_char@data              cstackCOMMON 0070
uart_write_direction@F2949        dataBANK0    0035
uart_write_hall_state@F2945       dataBANK0    0020
uart_write_unsigned_int@char1     cstackCOMMON 0074
uart_write_unsigned_int@char2     cstackCOMMON 0075
uart_write_unsigned_int@number    cstackCOMMON 0070
uart_write_voltage@port           cstackCOMMON 007C
uart_write_voltage@voltage        cstackBANK0  0049
wtemp                             (abs)        007E
wtemp0                            (abs)        007E
wtemp1                            (abs)        0080
wtemp2                            (abs)        0082
wtemp3                            (abs)        0084
wtemp4                            (abs)        0086
wtemp5                            (abs)        0088
wtemp6                            (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 12 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_setup_mcu
		_uart_write_voltage
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_write_voltage *****************
 Defined at:
		line 85 in file "uart.c"
 Parameters:    Size  Location     Type
  port            2   12[COMMON] int 
 Auto vars:     Size  Location     Type
  voltage         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       2       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_get_analog
		_uart_write_char
		_uart_write_unsigned_int
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uart_write_unsigned_int *****************
 Defined at:
		line 27 in file "uart.c"
 Parameters:    Size  Location     Type
  number          2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  char2           1    5[COMMON] unsigned char 
  char1           1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_write_voltage
 This function uses a non-reentrant model


 *************** function _uart_write_char *****************
 Defined at:
		line 12 in file "uart.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_write_voltage
		_uart_write_string
		_uart_write_hall_state
		_uart_write_direction
 This function uses a non-reentrant model


 *************** function _get_analog *****************
 Defined at:
		line 48 in file "analog.c"
 Parameters:    Size  Location     Type
  port            2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  output          2   10[COMMON] unsigned int 
  msb             2    8[COMMON] unsigned int 
  lsb             2    6[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    2[COMMON] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         6       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:        10       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_analog_init
 This function is called by:
		_uart_write_voltage
		_read_current
		_read_phase1
		_read_phase2
		_read_phase3
 This function uses a non-reentrant model


 *************** function _analog_init *****************
 Defined at:
		line 9 in file "analog.c"
 Parameters:    Size  Location     Type
  analog_port     2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_analog
 This function uses a non-reentrant model


 *************** function _setup_mcu *****************
 Defined at:
		line 9 in file "micro_setup.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_init_hall
		_init_pin
		_init_uart
		_setup_port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setup_port *****************
 Defined at:
		line 17 in file "micro_setup.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setup_mcu
 This function uses a non-reentrant model


 *************** function _init_uart *****************
 Defined at:
		line 34 in file "micro_setup.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setup_mcu
 This function uses a non-reentrant model


 *************** function _init_pin *****************
 Defined at:
		line 73 in file "micro_setup.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_setup_mcu
 This function uses a non-reentrant model


 *************** function _init_hall *****************
 Defined at:
		line 90 in file "micro_setup.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_get_hall_state
 This function is called by:
		_setup_mcu
 This function uses a non-reentrant model


 *************** function _get_hall_state *****************
 Defined at:
		line 15 in file "hall_effect.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  hallC           2    6[BANK0 ] int 
  hallB           2    4[BANK0 ] int 
  hallA           2    2[BANK0 ] int 
  state           2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       8       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       8       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_read_hall
 This function is called by:
		_init_hall
		_hall_LED_state
		_get_direction
		_uart_write_hall_state
 This function uses a non-reentrant model


 *************** function _read_hall *****************
 Defined at:
		line 8 in file "hall_effect.c"
 Parameters:    Size  Location     Type
  hall_A          1    wreg     PTR int 
		 -> get_hall_state@hallA(2), 
  hall_B          1    0[COMMON] PTR int 
		 -> get_hall_state@hallB(2), 
  hall_C          1    1[COMMON] PTR int 
		 -> get_hall_state@hallC(2), 
 Auto vars:     Size  Location     Type
  hall_A          1    5[COMMON] PTR int 
		 -> get_hall_state@hallA(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_get_hall_state
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
uart.c
		_uart_write_voltage		CODE           	0671	0000	30
		_uart_write_char		CODE           	061A	0000	11
		_uart_write_unsigned_int		CODE           	068E	0000	31

uart.c estimated size: 72

micro_setup.c
		_init_pin      		CODE           	063E	0000	16
		_init_uart     		CODE           	0624	0000	14
		_setup_mcu     		CODE           	065E	0000	20
		_setup_port    		CODE           	0631	0000	14
		_init_hall     		CODE           	0610	0000	11

micro_setup.c estimated size: 75

shared
		__initialization		CODE           	07F0	0000	13

shared estimated size: 13

hall_effect.c
		_read_hall     		CODE           	06CA	0000	41
		_get_hall_state		CODE           	077B	0000	118

hall_effect.c estimated size: 159

main.c
		_main          		CODE           	06AC	0000	31

main.c estimated size: 31

analog.c
		_get_analog    		CODE           	0748	0000	52
		_analog_init   		CODE           	071B	0000	46

analog.c estimated size: 98

