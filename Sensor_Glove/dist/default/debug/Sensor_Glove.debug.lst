

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sat Dec 31 00:39:24 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F87J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           	psect	idataCOMRAM
    21  01FDB2                     __pidataCOMRAM:
    22                           	opt stack 0
    23                           
    24                           ;initializer for _ADC_RESULT
    25  01FDB2  000B               	dw	11
    26  01FDB4  000C               	dw	12
    27  01FDB6  000D               	dw	13
    28  01FDB8  000E               	dw	14
    29  01FDBA  000F               	dw	15
    30  01FDBC  0010               	dw	16
    31  01FDBE  0011               	dw	17
    32  01FDC0  0012               	dw	18
    33  01FDC2  0013               	dw	19
    34  01FDC4  0014               	dw	20
    35  01FDC6  0015               	dw	21
    36  01FDC8  0016               	dw	22
    37  0000                     _PIE1bits	set	3997
    38  0000                     _PORTCbits	set	3970
    39  0000                     _PORTDbits	set	3971
    40  0000                     _PORTEbits	set	3972
    41  0000                     _RCSTAbits	set	4011
    42  0000                     _SPBRG	set	4015
    43  0000                     _SSP1BUF	set	4041
    44  0000                     _SSP1CON1bits	set	4038
    45  0000                     _SSP1STATbits	set	4039
    46  0000                     _TRISA	set	3986
    47  0000                     _TRISB	set	3987
    48  0000                     _TRISC	set	3988
    49  0000                     _TRISD	set	3989
    50  0000                     _TRISE	set	3990
    51  0000                     _TRISF	set	3991
    52  0000                     _TXSTA	set	4012
    53                           
    54                           ; #config settings
    55  0000                     
    56                           	psect	cinit
    57  01FE36                     __pcinit:
    58                           	opt stack 0
    59  01FE36                     start_initialization:
    60                           	opt stack 0
    61  01FE36                     __initialization:
    62                           	opt stack 0
    63                           
    64                           ; Initialize objects allocated to COMRAM (24 bytes)
    65                           ; load TBLPTR registers with __pidataCOMRAM
    66  01FE36  0EB2               	movlw	low __pidataCOMRAM
    67  01FE38  6EF6               	movwf	tblptrl,c
    68  01FE3A  0EFD               	movlw	high __pidataCOMRAM
    69  01FE3C  6EF7               	movwf	tblptrh,c
    70  01FE3E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
    71  01FE40  6EF8               	movwf	tblptru,c
    72  01FE42  EE00  F02D         	lfsr	0,__pdataCOMRAM
    73  01FE46  EE10 F018          	lfsr	1,24
    74  01FE4A                     copy_data0:
    75  01FE4A  0009               	tblrd		*+
    76  01FE4C  CFF5 FFEE          	movff	tablat,postinc0
    77  01FE50  50E5               	movf	postdec1,w,c
    78  01FE52  50E1               	movf	fsr1l,w,c
    79  01FE54  E1FA               	bnz	copy_data0
    80                           
    81                           ; Clear objects allocated to BANK0 (46 bytes)
    82  01FE56  EE00  F060         	lfsr	0,__pbssBANK0
    83  01FE5A  0E2E               	movlw	46
    84  01FE5C                     clear_0:
    85  01FE5C  6AEE               	clrf	postinc0,c
    86  01FE5E  06E8               	decf	wreg,f,c
    87  01FE60  E1FD               	bnz	clear_0
    88  01FE62                     end_of_initialization:
    89                           	opt stack 0
    90  01FE62                     __end_of__initialization:
    91                           	opt stack 0
    92  01FE62  0100               	movlb	0
    93  01FE64  EF54  F0FF         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           tblptrh	equ	0xFF7
    96                           tblptrl	equ	0xFF6
    97                           tablat	equ	0xFF5
    98                           postinc0	equ	0xFEE
    99                           wreg	equ	0xFE8
   100                           postdec1	equ	0xFE5
   101                           fsr1l	equ	0xFE1
   102                           
   103                           	psect	dataCOMRAM
   104  00002D                     __pdataCOMRAM:
   105                           	opt stack 0
   106  00002D                     _ADC_RESULT:
   107                           	opt stack 0
   108  00002D                     	ds	24
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           postdec1	equ	0xFE5
   116                           fsr1l	equ	0xFE1
   117                           
   118                           	psect	bssBANK0
   119  000060                     __pbssBANK0:
   120                           	opt stack 0
   121  000060                     _AD7147Registers:
   122                           	opt stack 0
   123  000060                     	ds	46
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	cstackCOMRAM
   134  000001                     __pcstackCOMRAM:
   135                           	opt stack 0
   136  000001                     ?___awdiv:
   137                           	opt stack 0
   138  000001                     write_spi@message:
   139                           	opt stack 0
   140  000001                     ___awdiv@dividend:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x0
   144  000001                     	ds	2
   145  000003                     write_spi@p1:
   146                           	opt stack 0
   147  000003                     ___awdiv@divisor:
   148                           	opt stack 0
   149                           
   150                           ; 2 bytes @ 0x2
   151  000003                     	ds	2
   152  000005                     ___awdiv@counter:
   153                           	opt stack 0
   154  000005                     write_spi@p2:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x4
   158  000005                     	ds	1
   159  000006                     ___awdiv@sign:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x5
   163  000006                     	ds	1
   164  000007                     write_spi@low:
   165                           	opt stack 0
   166  000007                     ___awdiv@quotient:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0x6
   170  000007                     	ds	2
   171  000009                     delay_ms@n:
   172                           	opt stack 0
   173  000009                     write_spi@high:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x8
   177  000009                     	ds	2
   178  00000B                     ??_delay_ms:
   179  00000B                     write_AD7147@RegisterAddress:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0xA
   183  00000B                     	ds	1
   184  00000C                     delay_ms@j:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0xB
   188  00000C                     	ds	1
   189  00000D                     write_AD7147@NumberOfRegisters:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0xC
   193  00000D                     	ds	2
   194  00000F                     write_AD7147@DataBuffer:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0xE
   198  00000F                     	ds	2
   199  000011                     ??_write_AD7147:
   200                           
   201                           ; 1 bytes @ 0x10
   202  000011                     	ds	2
   203  000013                     write_AD7147@ControlValue:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x12
   207  000013                     	ds	2
   208  000015                     write_AD7147@DataValue:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x14
   212  000015                     	ds	2
   213  000017                     write_AD7147@enable_word:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x16
   217  000017                     	ds	2
   218  000019                     write_AD7147@i:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x18
   222  000019                     	ds	2
   223  00001B                     setup_AD7147@StageBuffer:
   224                           	opt stack 0
   225                           
   226                           ; 16 bytes @ 0x1A
   227  00001B                     	ds	16
   228  00002B                     main@bb:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x2A
   232  00002B                     	ds	2
   233                           tblptru	equ	0xFF8
   234                           tblptrh	equ	0xFF7
   235                           tblptrl	equ	0xFF6
   236                           tablat	equ	0xFF5
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           postdec1	equ	0xFE5
   240                           fsr1l	equ	0xFE1
   241                           
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 5 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;  bb              2   42[COMRAM] unsigned int 
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;Total ram usage:        2 bytes
   266 ;; Hardware stack levels required when called:    3
   267 ;; This function calls:
   268 ;;		_delay_ms
   269 ;;		_setup_AD7147
   270 ;;		_setup_spi
   271 ;;		_write_spi
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  01FEA8                     __ptext0:
   279                           	opt stack 0
   280  01FEA8                     _main:
   281                           	opt stack 28
   282                           
   283                           ;main.c: 7: delay_ms(500);
   284                           
   285                           ;incstack = 0
   286  01FEA8  0E01               	movlw	1
   287  01FEAA  6E0A               	movwf	delay_ms@n+1,c
   288  01FEAC  0EF4               	movlw	244
   289  01FEAE  6E09               	movwf	delay_ms@n,c
   290  01FEB0  EC34  F0FF         	call	_delay_ms	;wreg free
   291                           
   292                           ;main.c: 8: setup_spi();
   293  01FEB4  ECE5  F0FE         	call	_setup_spi	;wreg free
   294                           
   295                           ;main.c: 9: setup_AD7147();
   296  01FEB8  ECF3  F0FE         	call	_setup_AD7147	;wreg free
   297                           
   298                           ;main.c: 10: TRISD = 0b00000000;
   299  01FEBC  0E00               	movlw	0
   300  01FEBE  6E95               	movwf	3989,c	;volatile
   301                           
   302                           ;main.c: 11: TRISE = 0b00000000;
   303  01FEC0  0E00               	movlw	0
   304  01FEC2  6E96               	movwf	3990,c	;volatile
   305                           
   306                           ;main.c: 12: PORTDbits.RD7 = 1;
   307  01FEC4  8E83               	bsf	3971,7,c	;volatile
   308                           
   309                           ;main.c: 13: PORTDbits.RD6 = 0;
   310  01FEC6  9C83               	bcf	3971,6,c	;volatile
   311                           
   312                           ;main.c: 14: PORTDbits.RD5 = 0;
   313  01FEC8  9A83               	bcf	3971,5,c	;volatile
   314                           
   315                           ;main.c: 15: PORTDbits.RD4 = 0;
   316  01FECA  9883               	bcf	3971,4,c	;volatile
   317                           
   318                           ;main.c: 16: PORTDbits.RD3 = 0;
   319  01FECC  9683               	bcf	3971,3,c	;volatile
   320                           
   321                           ;main.c: 17: PORTDbits.RD2 = 0;
   322  01FECE  9483               	bcf	3971,2,c	;volatile
   323                           
   324                           ;main.c: 18: PORTDbits.RD1 = 0;
   325  01FED0  9283               	bcf	3971,1,c	;volatile
   326                           
   327                           ;main.c: 19: PORTDbits.RD0 = 0;
   328  01FED2  9083               	bcf	3971,0,c	;volatile
   329                           
   330                           ;main.c: 20: unsigned int bb = 0b1100100011110000;
   331  01FED4  0EC8               	movlw	200
   332  01FED6  6E2C               	movwf	main@bb+1,c
   333  01FED8  0EF0               	movlw	240
   334  01FEDA  6E2B               	movwf	main@bb,c
   335  01FEDC                     l1031:
   336                           
   337                           ;main.c: 22: {
   338                           ;main.c: 23: delay_ms(1);
   339  01FEDC  0E00               	movlw	0
   340  01FEDE  6E0A               	movwf	delay_ms@n+1,c
   341  01FEE0  0E01               	movlw	1
   342  01FEE2  6E09               	movwf	delay_ms@n,c
   343  01FEE4  EC34  F0FF         	call	_delay_ms	;wreg free
   344                           
   345                           ;main.c: 25: PORTEbits.RE0 = 0;
   346  01FEE8  9084               	bcf	3972,0,c	;volatile
   347                           
   348                           ;main.c: 26: write_spi(bb);
   349  01FEEA  C02B  F001         	movff	main@bb,write_spi@message
   350  01FEEE  C02C  F002         	movff	main@bb+1,write_spi@message+1
   351  01FEF2  EC06  F0FF         	call	_write_spi	;wreg free
   352                           
   353                           ;main.c: 27: write_spi(bb);
   354  01FEF6  C02B  F001         	movff	main@bb,write_spi@message
   355  01FEFA  C02C  F002         	movff	main@bb+1,write_spi@message+1
   356  01FEFE  EC06  F0FF         	call	_write_spi	;wreg free
   357                           
   358                           ;main.c: 28: PORTEbits.RE0 = 1;
   359  01FF02  8084               	bsf	3972,0,c	;volatile
   360  01FF04  D7EB               	goto	l1031
   361  01FF06                     __end_of_main:
   362                           	opt stack 0
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372 ;; *************** function _setup_spi *****************
   373 ;; Defined at:
   374 ;;		line 4 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/spi.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402  01FDCA                     __ptext1:
   403                           	opt stack 0
   404  01FDCA                     _setup_spi:
   405                           	opt stack 30
   406                           
   407                           ;spi.c: 6: SSP1STATbits.SMP = 0;
   408                           
   409                           ;incstack = 0
   410  01FDCA  9EC7               	bcf	4039,7,c	;volatile
   411                           
   412                           ;spi.c: 7: SSP1STATbits.CKE = 0;
   413  01FDCC  9CC7               	bcf	4039,6,c	;volatile
   414                           
   415                           ;spi.c: 9: SSP1CON1bits.WCOL = 0;
   416  01FDCE  9EC6               	bcf	4038,7,c	;volatile
   417                           
   418                           ;spi.c: 10: SSP1CON1bits.CKP = 0;
   419  01FDD0  98C6               	bcf	4038,4,c	;volatile
   420                           
   421                           ;spi.c: 12: SSP1CON1bits.SSPM3 = 0;
   422  01FDD2  96C6               	bcf	4038,3,c	;volatile
   423                           
   424                           ;spi.c: 13: SSP1CON1bits.SSPM2 = 0;
   425  01FDD4  94C6               	bcf	4038,2,c	;volatile
   426                           
   427                           ;spi.c: 14: SSP1CON1bits.SSPM1 = 1;
   428  01FDD6  82C6               	bsf	4038,1,c	;volatile
   429                           
   430                           ;spi.c: 15: SSP1CON1bits.SSPM0 = 0;
   431  01FDD8  90C6               	bcf	4038,0,c	;volatile
   432                           
   433                           ;spi.c: 17: PIE1bits.SSP1IE = 0;
   434  01FDDA  969D               	bcf	3997,3,c	;volatile
   435                           
   436                           ;spi.c: 18: SSP1CON1bits.SSPEN = 1;
   437  01FDDC  8AC6               	bsf	4038,5,c	;volatile
   438                           
   439                           ;spi.c: 20: TRISC &= 0xDF;
   440  01FDDE  9A94               	bcf	3988,5,c	;volatile
   441                           
   442                           ;spi.c: 21: TRISC &= 0xF7;
   443  01FDE0  9694               	bcf	3988,3,c	;volatile
   444                           
   445                           ;spi.c: 23: TRISF &= 0x7F;
   446  01FDE2  9E97               	bcf	3991,7,c	;volatile
   447  01FDE4  0012               	return		;funcret
   448  01FDE6                     __end_of_setup_spi:
   449                           	opt stack 0
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459 ;; *************** function _setup_AD7147 *****************
   460 ;; Defined at:
   461 ;;		line 5 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/AD7147.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  StageBuffer    16   26[COMRAM] unsigned int [8]
   466 ;; Return value:  Size  Location     Type
   467 ;;                  2    6[None  ] int 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:       16 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_write_AD7147
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  01FDE6                     __ptext2:
   491                           	opt stack 0
   492  01FDE6                     _setup_AD7147:
   493                           	opt stack 28
   494                           
   495                           ;AD7147.c: 7: unsigned int StageBuffer[8];
   496                           ;AD7147.c: 23: StageBuffer[0] = 0x3FFE;
   497                           
   498                           ;incstack = 0
   499  01FDE6  0E3F               	movlw	63
   500  01FDE8  6E1C               	movwf	setup_AD7147@StageBuffer+1,c
   501  01FDEA  0EFE               	movlw	254
   502  01FDEC  6E1B               	movwf	setup_AD7147@StageBuffer,c
   503                           
   504                           ;AD7147.c: 31: write_AD7147(0x80, 1, StageBuffer);
   505  01FDEE  0E00               	movlw	0
   506  01FDF0  6E0C               	movwf	write_AD7147@RegisterAddress+1,c
   507  01FDF2  0E80               	movlw	128
   508  01FDF4  6E0B               	movwf	write_AD7147@RegisterAddress,c
   509  01FDF6  0E00               	movlw	0
   510  01FDF8  6E0E               	movwf	write_AD7147@NumberOfRegisters+1,c
   511  01FDFA  0E01               	movlw	1
   512  01FDFC  6E0D               	movwf	write_AD7147@NumberOfRegisters,c
   513  01FDFE  0E1B               	movlw	low setup_AD7147@StageBuffer
   514  01FE00  6E0F               	movwf	write_AD7147@DataBuffer,c
   515  01FE02  0E00               	movlw	high setup_AD7147@StageBuffer
   516  01FE04  6E10               	movwf	write_AD7147@DataBuffer+1,c
   517  01FE06  EC83  F0FF         	call	_write_AD7147	;wreg free
   518  01FE0A  0012               	return		;funcret
   519  01FE0C                     __end_of_setup_AD7147:
   520                           	opt stack 0
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530 ;; *************** function _write_AD7147 *****************
   531 ;; Defined at:
   532 ;;		line 206 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/AD7147.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  RegisterAddr    2   10[COMRAM] const unsigned int 
   535 ;;  NumberOfRegi    2   12[COMRAM] unsigned int 
   536 ;;  DataBuffer      2   14[COMRAM] PTR unsigned int 
   537 ;;		 -> setup_AD7147@StageBuffer(16), 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  i               2   24[COMRAM] int 
   540 ;;  enable_word     2   22[COMRAM] unsigned int 
   541 ;;  DataValue       2   20[COMRAM] unsigned int 
   542 ;;  ControlValue    2   18[COMRAM] unsigned int 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:       16 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    1
   559 ;; This function calls:
   560 ;;		_write_spi
   561 ;; This function is called by:
   562 ;;		_setup_AD7147
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text3
   567  01FF06                     __ptext3:
   568                           	opt stack 0
   569  01FF06                     _write_AD7147:
   570                           	opt stack 28
   571                           
   572                           ;AD7147.c: 208: unsigned int ControlValue;
   573                           ;AD7147.c: 209: unsigned int DataValue;
   574                           ;AD7147.c: 210: unsigned int enable_word = 0xE000;
   575                           
   576                           ;incstack = 0
   577  01FF06  0EE0               	movlw	224
   578  01FF08  6E18               	movwf	write_AD7147@enable_word+1,c
   579  01FF0A  0E00               	movlw	0
   580  01FF0C  6E17               	movwf	write_AD7147@enable_word,c
   581                           
   582                           ;AD7147.c: 213: for (int i=0; i<NumberOfRegisters; i++)
   583  01FF0E  0E00               	movlw	0
   584  01FF10  6E1A               	movwf	write_AD7147@i+1,c
   585  01FF12  0E00               	movlw	0
   586  01FF14  6E19               	movwf	write_AD7147@i,c
   587  01FF16  D027               	goto	l947
   588  01FF18                     l937:
   589                           
   590                           ;AD7147.c: 214: {
   591                           ;AD7147.c: 216: ControlValue = enable_word + (RegisterAddress+i);
   592  01FF18  500B               	movf	write_AD7147@RegisterAddress,w,c
   593  01FF1A  2419               	addwf	write_AD7147@i,w,c
   594  01FF1C  6E11               	movwf	??_write_AD7147& (0+255),c
   595  01FF1E  500C               	movf	write_AD7147@RegisterAddress+1,w,c
   596  01FF20  201A               	addwfc	write_AD7147@i+1,w,c
   597  01FF22  6E12               	movwf	(??_write_AD7147+1)& (0+255),c
   598  01FF24  5017               	movf	write_AD7147@enable_word,w,c
   599  01FF26  2411               	addwf	??_write_AD7147,w,c
   600  01FF28  6E13               	movwf	write_AD7147@ControlValue,c
   601  01FF2A  5018               	movf	write_AD7147@enable_word+1,w,c
   602  01FF2C  2012               	addwfc	??_write_AD7147+1,w,c
   603  01FF2E  6E14               	movwf	write_AD7147@ControlValue+1,c
   604                           
   605                           ;AD7147.c: 217: DataValue = DataBuffer[i];
   606  01FF30  90D8               	bcf	status,0,c
   607  01FF32  3419               	rlcf	write_AD7147@i,w,c
   608  01FF34  6ED9               	movwf	fsr2l,c
   609  01FF36  341A               	rlcf	write_AD7147@i+1,w,c
   610  01FF38  6EDA               	movwf	fsr2h,c
   611  01FF3A  500F               	movf	write_AD7147@DataBuffer,w,c
   612  01FF3C  26D9               	addwf	fsr2l,f,c
   613  01FF3E  5010               	movf	write_AD7147@DataBuffer+1,w,c
   614  01FF40  22DA               	addwfc	fsr2h,f,c
   615  01FF42  CFDE F015          	movff	postinc2,write_AD7147@DataValue
   616  01FF46  CFDD F016          	movff	postdec2,write_AD7147@DataValue+1
   617                           
   618                           ;AD7147.c: 219: write_spi(ControlValue);
   619  01FF4A  C013  F001         	movff	write_AD7147@ControlValue,write_spi@message
   620  01FF4E  C014  F002         	movff	write_AD7147@ControlValue+1,write_spi@message+1
   621  01FF52  EC06  F0FF         	call	_write_spi	;wreg free
   622                           
   623                           ;AD7147.c: 221: write_spi(DataValue);
   624  01FF56  C015  F001         	movff	write_AD7147@DataValue,write_spi@message
   625  01FF5A  C016  F002         	movff	write_AD7147@DataValue+1,write_spi@message+1
   626  01FF5E  EC06  F0FF         	call	_write_spi	;wreg free
   627  01FF62  4A19               	infsnz	write_AD7147@i,f,c
   628  01FF64  2A1A               	incf	write_AD7147@i+1,f,c
   629  01FF66                     l947:
   630  01FF66  500D               	movf	write_AD7147@NumberOfRegisters,w,c
   631  01FF68  5C19               	subwf	write_AD7147@i,w,c
   632  01FF6A  500E               	movf	write_AD7147@NumberOfRegisters+1,w,c
   633  01FF6C  581A               	subwfb	write_AD7147@i+1,w,c
   634  01FF6E  B0D8               	btfsc	status,0,c
   635  01FF70  0012               	return	
   636  01FF72  D7D2               	goto	l937
   637  01FF74                     __end_of_write_AD7147:
   638                           	opt stack 0
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1l	equ	0xFE1
   647                           postinc2	equ	0xFDE
   648                           postdec2	equ	0xFDD
   649                           fsr2h	equ	0xFDA
   650                           fsr2l	equ	0xFD9
   651                           status	equ	0xFD8
   652                           
   653 ;; *************** function _write_spi *****************
   654 ;; Defined at:
   655 ;;		line 26 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/spi.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;  message         2    0[COMRAM] unsigned int 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  high            2    8[COMRAM] unsigned int 
   660 ;;  low             2    6[COMRAM] unsigned int 
   661 ;;  p2              2    4[COMRAM] unsigned int 
   662 ;;  p1              2    2[COMRAM] unsigned int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;Total ram usage:       10 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;;		_write_AD7147
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text4
   687  01FE0C                     __ptext4:
   688                           	opt stack 0
   689  01FE0C                     _write_spi:
   690                           	opt stack 30
   691                           
   692                           ;spi.c: 28: unsigned int low = message & 0xFF;
   693                           
   694                           ;incstack = 0
   695  01FE0C  5001               	movf	write_spi@message,w,c
   696  01FE0E  6E07               	movwf	write_spi@low,c
   697  01FE10  6A08               	clrf	write_spi@low+1,c
   698                           
   699                           ;spi.c: 29: unsigned int high = (message >> 8);
   700  01FE12  5002               	movf	write_spi@message+1,w,c
   701  01FE14  6E09               	movwf	write_spi@high,c
   702  01FE16  6A0A               	clrf	write_spi@high+1,c
   703                           
   704                           ;spi.c: 31: SSP1BUF = high;
   705  01FE18  C009  FFC9         	movff	write_spi@high,4041	;volatile
   706  01FE1C                     l100:
   707  01FE1C  A0C7               	btfss	4039,0,c	;volatile
   708  01FE1E  D7FE               	goto	l100
   709                           
   710                           ;spi.c: 33: unsigned int p1 = SSP1BUF;
   711  01FE20  CFC9 F003          	movff	4041,write_spi@p1	;volatile
   712  01FE24  6A04               	clrf	write_spi@p1+1,c
   713                           
   714                           ;spi.c: 35: SSP1BUF = low;
   715  01FE26  C007  FFC9         	movff	write_spi@low,4041	;volatile
   716  01FE2A                     l103:
   717  01FE2A  A0C7               	btfss	4039,0,c	;volatile
   718  01FE2C  D7FE               	goto	l103
   719                           
   720                           ;spi.c: 37: unsigned int p2 = SSP1BUF;
   721  01FE2E  CFC9 F005          	movff	4041,write_spi@p2	;volatile
   722  01FE32  6A06               	clrf	write_spi@p2+1,c
   723  01FE34  0012               	return		;funcret
   724  01FE36                     __end_of_write_spi:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           postdec1	equ	0xFE5
   733                           fsr1l	equ	0xFE1
   734                           postinc2	equ	0xFDE
   735                           postdec2	equ	0xFDD
   736                           fsr2h	equ	0xFDA
   737                           fsr2l	equ	0xFD9
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _delay_ms *****************
   741 ;; Defined at:
   742 ;;		line 80 in file "C:/Users/Intern-Carl/Documents/GitHub/Electrical/Sensor_Glove/micro_setup.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  n               2    8[COMRAM] int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  j               2   11[COMRAM] int 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        5 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		___awdiv
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text5
   771  01FE68                     __ptext5:
   772                           	opt stack 0
   773  01FE68                     _delay_ms:
   774                           	opt stack 29
   775                           
   776                           ;micro_setup.c: 82: int j = n/10;
   777                           
   778                           ;incstack = 0
   779  01FE68  C009  F001         	movff	delay_ms@n,___awdiv@dividend
   780  01FE6C  C00A  F002         	movff	delay_ms@n+1,___awdiv@dividend+1
   781  01FE70  0E00               	movlw	0
   782  01FE72  6E04               	movwf	___awdiv@divisor+1,c
   783  01FE74  0E0A               	movlw	10
   784  01FE76  6E03               	movwf	___awdiv@divisor,c
   785  01FE78  ECBA  F0FF         	call	___awdiv	;wreg free
   786  01FE7C  C001  F00C         	movff	?___awdiv,delay_ms@j
   787  01FE80  C002  F00D         	movff	?___awdiv+1,delay_ms@j+1
   788                           
   789                           ;micro_setup.c: 83: while(j--)
   790  01FE84  D008               	goto	l997
   791  01FE86                     l995:
   792                           
   793                           ;micro_setup.c: 84: {
   794                           ;micro_setup.c: 85: _delay((unsigned long)((10)*(10000000/4000.0)));
   795  01FE86  0E21               	movlw	33
   796  01FE88  6E0B               	movwf	??_delay_ms& (0+255),c
   797  01FE8A  0E76               	movlw	118
   798  01FE8C                     u277:
   799  01FE8C  2EE8               	decfsz	wreg,f,c
   800  01FE8E  D7FE               	goto	u277
   801  01FE90  2E0B               	decfsz	??_delay_ms& (0+255),f,c
   802  01FE92  D7FC               	goto	u277
   803  01FE94  D000               	nop2	
   804  01FE96                     l997:
   805  01FE96  060C               	decf	delay_ms@j,f,c
   806  01FE98  A0D8               	btfss	status,0,c
   807  01FE9A  060D               	decf	delay_ms@j+1,f,c
   808  01FE9C  280C               	incf	delay_ms@j,w,c
   809  01FE9E  E1F3               	bnz	l995
   810  01FEA0  280D               	incf	delay_ms@j+1,w,c
   811  01FEA2  B4D8               	btfsc	status,2,c
   812  01FEA4  0012               	return	
   813  01FEA6  D7EF               	goto	l995
   814  01FEA8                     __end_of_delay_ms:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           postinc0	equ	0xFEE
   821                           wreg	equ	0xFE8
   822                           postdec1	equ	0xFE5
   823                           fsr1l	equ	0xFE1
   824                           postinc2	equ	0xFDE
   825                           postdec2	equ	0xFDD
   826                           fsr2h	equ	0xFDA
   827                           fsr2l	equ	0xFD9
   828                           status	equ	0xFD8
   829                           
   830 ;; *************** function ___awdiv *****************
   831 ;; Defined at:
   832 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  dividend        2    0[COMRAM] int 
   835 ;;  divisor         2    2[COMRAM] int 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  quotient        2    6[COMRAM] int 
   838 ;;  sign            1    5[COMRAM] unsigned char 
   839 ;;  counter         1    4[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2    0[COMRAM] int 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        8 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_delay_ms
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text6
   863  01FF74                     __ptext6:
   864                           	opt stack 0
   865  01FF74                     ___awdiv:
   866                           	opt stack 29
   867                           
   868                           ;incstack = 0
   869  01FF74  0E00               	movlw	0
   870  01FF76  6E06               	movwf	___awdiv@sign,c
   871  01FF78  AE04               	btfss	___awdiv@divisor+1,7,c
   872  01FF7A  D006               	goto	l957
   873  01FF7C  6C03               	negf	___awdiv@divisor,c
   874  01FF7E  1E04               	comf	___awdiv@divisor+1,f,c
   875  01FF80  B0D8               	btfsc	status,0,c
   876  01FF82  2A04               	incf	___awdiv@divisor+1,f,c
   877  01FF84  0E01               	movlw	1
   878  01FF86  6E06               	movwf	___awdiv@sign,c
   879  01FF88                     l957:
   880  01FF88  AE02               	btfss	___awdiv@dividend+1,7,c
   881  01FF8A  D006               	goto	l963
   882  01FF8C  6C01               	negf	___awdiv@dividend,c
   883  01FF8E  1E02               	comf	___awdiv@dividend+1,f,c
   884  01FF90  B0D8               	btfsc	status,0,c
   885  01FF92  2A02               	incf	___awdiv@dividend+1,f,c
   886  01FF94  0E01               	movlw	1
   887  01FF96  1A06               	xorwf	___awdiv@sign,f,c
   888  01FF98                     l963:
   889  01FF98  0E00               	movlw	0
   890  01FF9A  6E08               	movwf	___awdiv@quotient+1,c
   891  01FF9C  0E00               	movlw	0
   892  01FF9E  6E07               	movwf	___awdiv@quotient,c
   893  01FFA0  5003               	movf	___awdiv@divisor,w,c
   894  01FFA2  1004               	iorwf	___awdiv@divisor+1,w,c
   895  01FFA4  B4D8               	btfsc	status,2,c
   896  01FFA6  D01C               	goto	l985
   897  01FFA8  0E01               	movlw	1
   898  01FFAA  6E05               	movwf	___awdiv@counter,c
   899  01FFAC  D004               	goto	l971
   900  01FFAE                     l969:
   901  01FFAE  90D8               	bcf	status,0,c
   902  01FFB0  3603               	rlcf	___awdiv@divisor,f,c
   903  01FFB2  3604               	rlcf	___awdiv@divisor+1,f,c
   904  01FFB4  2A05               	incf	___awdiv@counter,f,c
   905  01FFB6                     l971:
   906  01FFB6  AE04               	btfss	___awdiv@divisor+1,7,c
   907  01FFB8  D7FA               	goto	l969
   908  01FFBA                     l973:
   909  01FFBA  90D8               	bcf	status,0,c
   910  01FFBC  3607               	rlcf	___awdiv@quotient,f,c
   911  01FFBE  3608               	rlcf	___awdiv@quotient+1,f,c
   912  01FFC0  5003               	movf	___awdiv@divisor,w,c
   913  01FFC2  5C01               	subwf	___awdiv@dividend,w,c
   914  01FFC4  5004               	movf	___awdiv@divisor+1,w,c
   915  01FFC6  5802               	subwfb	___awdiv@dividend+1,w,c
   916  01FFC8  A0D8               	btfss	status,0,c
   917  01FFCA  D005               	goto	l981
   918  01FFCC  5003               	movf	___awdiv@divisor,w,c
   919  01FFCE  5E01               	subwf	___awdiv@dividend,f,c
   920  01FFD0  5004               	movf	___awdiv@divisor+1,w,c
   921  01FFD2  5A02               	subwfb	___awdiv@dividend+1,f,c
   922  01FFD4  8007               	bsf	___awdiv@quotient,0,c
   923  01FFD6                     l981:
   924  01FFD6  90D8               	bcf	status,0,c
   925  01FFD8  3204               	rrcf	___awdiv@divisor+1,f,c
   926  01FFDA  3203               	rrcf	___awdiv@divisor,f,c
   927  01FFDC  2E05               	decfsz	___awdiv@counter,f,c
   928  01FFDE  D7ED               	goto	l973
   929  01FFE0                     l985:
   930  01FFE0  5006               	movf	___awdiv@sign,w,c
   931  01FFE2  B4D8               	btfsc	status,2,c
   932  01FFE4  D004               	goto	l989
   933  01FFE6  6C07               	negf	___awdiv@quotient,c
   934  01FFE8  1E08               	comf	___awdiv@quotient+1,f,c
   935  01FFEA  B0D8               	btfsc	status,0,c
   936  01FFEC  2A08               	incf	___awdiv@quotient+1,f,c
   937  01FFEE                     l989:
   938  01FFEE  C007  F001         	movff	___awdiv@quotient,?___awdiv
   939  01FFF2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   940  01FFF6  0012               	return	
   941  01FFF8                     __end_of___awdiv:
   942                           	opt stack 0
   943  0000                     tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           postinc2	equ	0xFDE
   952                           postdec2	equ	0xFDD
   953                           fsr2h	equ	0xFDA
   954                           fsr2l	equ	0xFD9
   955                           status	equ	0xFD8
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           postdec1	equ	0xFE5
   963                           fsr1l	equ	0xFE1
   964                           postinc2	equ	0xFDE
   965                           postdec2	equ	0xFDD
   966                           fsr2h	equ	0xFDA
   967                           fsr2l	equ	0xFD9
   968                           status	equ	0xFD8
   969                           
   970                           	psect	rparam
   971  0000                     tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           postinc2	equ	0xFDE
   980                           postdec2	equ	0xFDD
   981                           fsr2h	equ	0xFDA
   982                           fsr2l	equ	0xFD9
   983                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      68
    BANK0           160      0      46
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    write_AD7147@DataBuffer	PTR unsigned int  size(2) Largest target is 16
		 -> setup_AD7147@StageBuffer(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_setup_AD7147
    _setup_AD7147->_write_AD7147
    _write_AD7147->_write_spi
    _delay_ms->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1761
                                             42 COMRAM     2     2      0
                           _delay_ms
                       _setup_AD7147
                          _setup_spi
                          _write_spi
 ---------------------------------------------------------------------------------
 (1) _setup_spi                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_AD7147                                        16    16      0     767
                                             26 COMRAM    16    16      0
                       _write_AD7147
 ---------------------------------------------------------------------------------
 (2) _write_AD7147                                        16    10      6     743
                                             10 COMRAM    16    10      6
                          _write_spi
 ---------------------------------------------------------------------------------
 (1) _write_spi                                           10     8      2     348
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     601
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     ___awdiv
   _setup_AD7147
     _write_AD7147
       _write_spi
   _setup_spi
   _write_spi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2E       5       28.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      44       1       71.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      20        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sat Dec 31 00:39:24 2016

                 ___awdiv@sign 0006                   __CFG_CP0$OFF 000000                            l100 FE1C  
                          l103 FE2A                            l937 FF18                            l971 FFB6  
                          l963 FF98                            l947 FF66                            l981 FFD6  
                          l973 FFBA                            l957 FF88                            l969 FFAE  
                          l985 FFE0                            l995 FE86                            l989 FFEE  
                          l997 FE96                            u277 FE8C                            wreg 000FE8  
                 __CFG_FOSC$HS 000000    write_AD7147@RegisterAddress 000B                           l1031 FEDC  
                __CFG_DEBUG$ON 000000                  __CFG_FCMEN$ON 000000                           _main FEA8  
                         fsr2h 000FDA                           fsr1l 000FE1                           fsr2l 000FD9  
                         start 0002                  __CFG_IESO$OFF 000000                  __CFG_FOSC2$ON 000000  
                 ___param_bank 000010                  write_spi@high 0009                          ?_main 0001  
              __end_of___awdiv FFF8                ___awdiv@divisor 0003                ___awdiv@counter 0005  
                        _SPBRG 000FAF                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                        _TRISF 000F97                          _TXSTA 000FAC          __size_of_write_AD7147 006E  
                        tablat 000FF5                          status 000FD8                __initialization FE36  
                 __end_of_main FF06                   _write_AD7147 FF06                         ??_main 002B  
                __activetblptr 000000               ___awdiv@dividend 0001                 __CFG_WDTEN$OFF 000000  
             __end_of_delay_ms FEA8                 __CFG_XINST$OFF 000000                      ??___awdiv 0005  
               __CFG_STVREN$ON 000000                         clear_0 FE5C               ___awdiv@quotient 0007  
                       main@bb 002B                   __pdataCOMRAM 002D                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                     __accesstop 0060  
      __end_of__initialization FE62                  ___rparam_used 000001                 __pcstackCOMRAM 0001  
                   __pbssBANK0 0060          write_AD7147@DataValue 0015             __size_of_setup_spi 001C  
                    ?_delay_ms 0009                        _SSP1BUF 000FC9             __size_of_write_spi 002A  
                      __Hparam 0000                        __Lparam 0000                        ___awdiv FF74  
                      __pcinit FE36                        __ramtop 1000                        __ptext0 FEA8  
                      __ptext1 FDCA                        __ptext2 FDE6                        __ptext3 FF06  
                      __ptext4 FE0C                        __ptext5 FE68                        __ptext6 FF74  
                   ??_delay_ms 000B           end_of_initialization FE62                  ?_setup_AD7147 0001  
            __end_of_setup_spi FDE6                      _RCSTAbits 000FAB                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                    _PORTCbits 000F82                      _PORTDbits 000F83                      _PORTEbits 000F84  
            __end_of_write_spi FE36                 ??_setup_AD7147 001B                   write_spi@low 0007  
                __pidataCOMRAM FDB2            start_initialization FE36               write_spi@message 0001  
      setup_AD7147@StageBuffer 001B         write_AD7147@DataBuffer 000F              __size_of_delay_ms 0040  
                     ?___awdiv 0001           __end_of_setup_AD7147 FE0C                  ?_write_AD7147 000B  
                    delay_ms@j 000C                      delay_ms@n 0009  write_AD7147@NumberOfRegisters 000D  
                     _PIE1bits 000F9D                      _setup_spi FDCA                 ??_write_AD7147 0011  
                  write_spi@p1 0003                    write_spi@p2 0005                     _ADC_RESULT 002D  
                    _write_spi FE0C                      copy_data0 FE4A                _AD7147Registers 0060  
                     __Hrparam 0000                       __Lrparam 0000               __size_of___awdiv 0084  
                   ?_setup_spi 0001                       _delay_ms FE68                   _SSP1CON1bits 000FC6  
                   ?_write_spi 0001                  __size_of_main 005E          __size_of_setup_AD7147 0026  
     write_AD7147@ControlValue 0013                  write_AD7147@i 0019                   _SSP1STATbits 000FC7  
      write_AD7147@enable_word 0017           __end_of_write_AD7147 FF74                   _setup_AD7147 FDE6  
                  ??_setup_spi 0001                    ??_write_spi 0003  
